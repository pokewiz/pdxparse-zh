{-# OPTIONS_GHC -fno-warn-incomplete-patterns #-} -- generated by Shakespeare, many cases missing
{-|
Module      : Messages
Description : Output messages

This module contains a huge data type with many constructors, each representing
a different message that the script presentation engine may output. Any that it
doesn't know about will be regurgitated intact using 'MsgUnprocessed'. Others
are converted at some point, probably using 'imsg2doc' or 'imsg2doc_html', to a
message in natural language. In principle, the program's output can be
converted this way to other languages by defining a new case for that language
in the 'RenderMessage' instance for 'ScriptMessage'. So far only English is
supported (and even then it is incomplete).

This module was originally written via the Yesod library @shakespeare-i18n@, with
messages defined in external files. Unfortunately, due to performance bugs in
GHC, compiling this module this way was unacceptably slow, which made adding
new cases far more tedious than it should have been. Most of this file consists
of code generated by the @shakespeare-i18n@ Template Haskell splice function
'Text.Shakespeare.I18N.mkMessage', dumped with the @-ddump-splices@ option to
GHC, and edited for human readability.

Functions used in 'ScriptMessage''s instance of the localization method
'Text.Shakespeare.I18N.renderMessage' are defined in "MessageTools". The
Template Haskell version of this module required them to be in a separate
module due to TH stage restrictions.
-}
module Messages (
        ScriptMessage (..)
    ,   StatementHandler
    ,   template, templateDoc
    ,   message, messageText
    ,   imsg2doc, imsg2doc_html
    ,   IndentedMessage, IndentedMessages
    ) where

import Data.Monoid ((<>))

import Data.Text (Text)
import qualified Data.Text as T

import Text.PrettyPrint.Leijen.Text (Doc)
import qualified Text.PrettyPrint.Leijen.Text as PP
import Text.Shakespeare.I18N (RenderMessage (..))

import Abstract (GenericStatement)
import qualified Doc
import MessageTools -- import everything
import SettingsTypes (PPT, getLangs, GameData (..), IsGameData (..))

-- | Dummy type required by the Shakespeare machinery.
data Script = Script

-- | The abstract message type. Each constructor is a localizable message.
--
-- To add a new message, add a constructor here (using the same names as an
-- existing constructor if possible), then add a case for it in the
-- 'RenderMessage' instance for 'ScriptMessage'.
data ScriptMessage
    = MsgUnprocessed {scriptMessageMsg :: Text}
    | MsgYes {scriptMessageIcon :: Text}
    | MsgNo {scriptMessageIcon :: Text}
    | MsgAddCardinal
    | MsgHeirDies
    | MsgRulerDies
    | MsgLoseCardinal
    | MsgGainADM {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainAT {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainAuth {scriptMessageAmt :: Double}
    | MsgGainBT {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainBP {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainBM {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainDIP {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainDoom {scriptMessageAmt :: Double}
    | MsgHeirGainClaim {scriptMessageAmt :: Double}
    | MsgGainDevotion {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainHordeUnity {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainImperialAuthority {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainKarma {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainLegitimacy {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainMIL {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainNavyTradition {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainPapalInfluence {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainPrestige {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainStability {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainWarExhaustion {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainYearlyManpower {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainADMSkill {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainDIPSkill {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainMILSkill {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainSiegeProgress {scriptMessageAmt :: Double}
    | MsgGainPatAuth {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainPiety {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainRepTrad {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainInflation {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainLocalAutonomy {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgReformDesire {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainReformDesire {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainMercantilism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainMP {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainMPFrac {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgSeparatism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCountryMod
    | MsgProvMod
    | MsgPermanentProvMod
    | MsgRulerMod
    | MsgTradeMod
    | MsgAddMod {scriptMessageModid :: Text, scriptMessageName :: Text, scriptMessageDays :: Double}
    | MsgGainMod {scriptMessageModid :: Text, scriptMessageType :: Text, scriptMessageName :: Text}
    | MsgGainModDur {scriptMessageModid :: Text, scriptMessageType :: Text, scriptMessageName :: Text, scriptMessageDays :: Double}
    | MsgGainModPow {scriptMessageModid :: Text, scriptMessageType :: Text, scriptMessageName :: Text, scriptMessagePow :: Double}
    | MsgGainModPowDur {scriptMessageModid :: Text, scriptMessageType :: Text, scriptMessageName :: Text, scriptMessagePow :: Double, scriptMessageDays :: Double}
    | MsgActorGainsMod {scriptMessageModid :: Text, scriptMessageWho :: Text, scriptMessageType :: Text, scriptMessageName :: Text}
    | MsgActorGainsModDur {scriptMessageModid :: Text, scriptMessageWho :: Text, scriptMessageType :: Text, scriptMessageName :: Text, scriptMessageDays :: Double}
    | MsgActorGainsModPow {scriptMessageModid :: Text, scriptMessageWho :: Text, scriptMessageType :: Text, scriptMessageName :: Text, scriptMessagePow :: Double}
    | MsgActorGainsModPowDur {scriptMessageModid :: Text, scriptMessageWho :: Text, scriptMessageType :: Text, scriptMessageName :: Text, scriptMessagePow :: Double, scriptMessageDays :: Double}
    | MsgHasModifier {scriptMessageModid :: Text, scriptMessageKind :: Text, scriptMessageName :: Text}
    | MsgRemoveModifier {scriptMessageModid :: Text, scriptMessageKind :: Text, scriptMessageName :: Text}
    | MsgAllOf
    | MsgOurCountry
    | MsgFROM
    | MsgPREV
    | MsgNoneOf
    | MsgAllCoreProvince
    | MsgAllProvince
    | MsgArea
    | MsgAtLeastOneOf
    | MsgAnyActiveTradeNode
    | MsgAnyAlly
    | MsgAnyCoreCountry
    | MsgAnyCoreProvince
    | MsgAnyCountry
    | MsgAnyEmptyNeighborProvince
    | MsgAnyEnemyCountry
    | MsgAnyHereticProvince
    | MsgAnyKnownCountry
    | MsgAnyNeighborCountry
    | MsgAnyNeighborProvince
    | MsgAnyOwnedProvince
    | MsgAnyPrivateeringCountry
    | MsgAnyProvince
    | MsgAnyRival
    | MsgAnySubject
    | MsgAnyTradeNode
    | MsgCapital
    | MsgController
    | MsgEmperor
    | MsgAllCountries
    | MsgAllNeighborCountries
    | MsgAllSubjectCountries
    | MsgElse
    | MsgEveryActiveTradeNode
    | MsgEveryAlly
    | MsgEveryCoreCountry
    | MsgEveryCoreProvince
    | MsgEveryCountry
    | MsgEveryEnemyCountry
    | MsgEveryHereticProvince
    | MsgEveryKnownCountry
    | MsgEveryNeighborCountry
    | MsgEveryNeighborProvince
    | MsgEveryOwnedProvince
    | MsgEveryProvince
    | MsgEveryRival
    | MsgEverySubject
    | MsgHiddenEffect
    | MsgIf
    | MsgLimit
    | MsgMostProvinceTradePower
    | MsgOverlord
    | MsgOwner
    | MsgRandomActiveTradeNode
    | MsgRandomAlly
    | MsgRandomCoreCountry
    | MsgRandomCoreProvince
    | MsgRandomCountry
    | MsgRandomElector
    | MsgRandomEmptyNeighborProvince
    | MsgRandomHereticProvince
    | MsgRandomKnownCountry
    | MsgRandomList
    | MsgRandomNeighborCountry
    | MsgRandomNeighborProvince
    | MsgRandomOwnedProvince
    | MsgRandomPrivateeringCountry
    | MsgRandomProvince
    | MsgRandomRival
    | MsgRandomSubjectCountry
    | MsgRandomTradeNode
    | MsgStrongestTradePower
    | MsgWhile
    | MsgRandomChance {scriptMessageChance :: Double}
    | MsgRandom
    | MsgChangeGovernment {scriptMessageWhat :: Text}
    | MsgContinentIs {scriptMessageWhat :: Text}
    | MsgCultureIs {scriptMessageWhat :: Text}
    | MsgCultureIsGroup {scriptMessageWhat :: Text}
    | MsgRulerIsDynasty {scriptMessageWhat :: Text}
    | MsgDisasterEnds {scriptMessageWhat :: Text}
    | MsgGovernmentIs {scriptMessageWhat :: Text}
    | MsgGovernmentIsIcon {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgHasAdvisor {scriptMessageWhom :: Text}
    | MsgHasAdvisorType {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgHasTerrain {scriptMessageWhat :: Text}
    | MsgCavalrySpawnsCountry {scriptMessageWhom :: Text}
    | MsgCavalrySpawnsProvince {scriptMessageWhere :: Text}
    | MsgInfantrySpawnsCountry {scriptMessageWhom :: Text}
    | MsgInfantrySpawnsProvince {scriptMessageWhere :: Text}
    | MsgAdvisorDies {scriptMessageWho :: Text}
    | MsgPrimaryCultureIs {scriptMessageWhat :: Text}
    | MsgRegionIs {scriptMessageWhat :: Text}
    | MsgLoseAdvisor {scriptMessageWho :: Text}
    | MsgRemoveFromEstate {scriptMessageIcon :: Text, scriptMessageWhom :: Text}
    | MsgDisasterOngoing {scriptMessageWhat :: Text}
    | MsgProvinceIs {scriptMessageWhat :: Text}
    | MsgOwns {scriptMessageWhat :: Text}
    | MsgOwnsCore {scriptMessageWhat :: Text}
    | MsgControls {scriptMessageWhat :: Text}
    | MsgAdvisorExists {scriptMessageAdvisorID :: Double}
    | MsgAdvisorIsEmployed {scriptMessageAdvisorID :: Double}
    | MsgClearFlag {scriptMessageFlagType :: Text, scriptMessageName :: Text}
    | MsgHasFlag {scriptMessageFlagType :: Text, scriptMessageName :: Text}
    | MsgSetFlag {scriptMessageFlagType :: Text, scriptMessageName :: Text}
    | MsgHadFlag {scriptMessageCategory :: Text, scriptMessageName :: Text, scriptMessageDays :: Double}
    | MsgCountryFlag
    | MsgProvinceFlag
    | MsgRulerFlag
    | MsgGlobalFlag
    | MsgHadCountryFlag {scriptMessageIcon :: Text, scriptMessageName :: Text, scriptMessageDays :: Double}
    | MsgHadProvinceFlag {scriptMessageIcon :: Text, scriptMessageName :: Text, scriptMessageDays :: Double}
    | MsgHadRulerFlag {scriptMessageIcon :: Text, scriptMessageName :: Text, scriptMessageDays :: Double}
    | MsgHadGlobalFlag {scriptMessageIcon :: Text, scriptMessageName :: Text, scriptMessageDays :: Double}
    | MsgColonySettlers {scriptMessageAmt :: Double}
    | MsgWasAtWar {scriptMessageAmt :: Double}
    | MsgHeirAge {scriptMessageAmt :: Double}
    | MsgYearIs {scriptMessageAmt :: Double}
    | MsgNumLoans {scriptMessageAmt :: Double}
    | MsgNumMercs {scriptMessageAmt :: Double}
    | MsgNumMissionaries {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNumPorts {scriptMessageAmt :: Double}
    | MsgNumRebelArmies {scriptMessageAmt :: Double}
    | MsgNumEmbargoes {scriptMessageAmt :: Double}
    | MsgUnitsInProvince {scriptMessageAmt :: Double}
    | MsgNumCities {scriptMessageAmt :: Double}
    | MsgNumCitiesThan {scriptMessageWhom :: Text}
    | MsgToleranceToThis {scriptMessageAmt :: Double}
    | MsgRulerADM {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgADMTech {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgArmyTradition {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyArmyTradition {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgArmyTraditionFromBattles {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgBaseManpower {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgBaseProduction {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgBaseTax {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCreateAdmiral {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCreateConquistador {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCreateExplorer {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCreateGeneral {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDevelopment {scriptMessageIcon :: Text, scriptMessageDevelopment :: Double}
    | MsgRulerDIP {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDIPTech {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHordeUnity {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyHordeUnity {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgKarma {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLegitimacy {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyLegitimacy {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgRulerMIL {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMILTech {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNumAllies {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNumCardinals {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNumColonists {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNumHeavyShips {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNumLightShips {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNumMerchants {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgStability {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgTotalDevelopment {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgTotalCardinals {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgUnrest {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMonthlyIncome {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgWarExhaustion {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMonthlyWarExhaustion {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgWarScore {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgRepTrad {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyRepTrad {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgInflation {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLocalAutonomy {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgManpowerPercentage {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMercantilism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgChangeGoods {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgCreateAdvisor {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgHasIdeaGroup {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgProducesGoods {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgEstateExists {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgHasEstate {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgAssignToEstate {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgRulerIsGeneral {scriptMessageIcon :: Text, scriptMessage_what :: Text}
    | MsgAlliedWith {scriptMessageWhom :: Text}
    | MsgCedeProvinceTo {scriptMessageWhom :: Text}
    | MsgControlledBy {scriptMessageWhom :: Text}
    | MsgDefensiveWarAgainst {scriptMessageWhom :: Text}
    | MsgDiscoverCountry {scriptMessageWhom :: Text}
    | MsgGainClaim {scriptMessageWho :: Text}
    | MsgGainPermanentClaimCountry {scriptMessageWho :: Text}
    | MsgGainPermanentClaimProvince {scriptMessageWhere :: Text}
    | MsgHasDiscovered {scriptMessageWhomOrWhere :: Text}
    | MsgDiscoveredBy {scriptMessageWhom :: Text}
    | MsgInherit {scriptMessageWhom :: Text}
    | MsgNeighbors {scriptMessageWhom :: Text}
    | MsgIsSubjectOf {scriptMessageWhom :: Text}
    | MsgLoseCoreCountry {scriptMessageWho :: Text}
    | MsgLoseCoreProvince {scriptMessageWhere :: Text}
    | MsgRoyalMarriageWith {scriptMessageWhom :: Text}
    | MsgOffensiveWarAgainst {scriptMessageWhom :: Text}
    | MsgOwnedBy {scriptMessageWhom :: Text}
    | MsgReleaseVassal {scriptMessageWhom :: Text}
    | MsgUnderSiegeBy {scriptMessageWhom :: Text}
    | MsgCountryIs {scriptMessageWho :: Text}
    | MsgTruceWith {scriptMessageWhom :: Text}
    | MsgAtWarWith {scriptMessageWhom :: Text}
    | MsgMakeWhitePeace {scriptMessageWhom :: Text}
    | MsgCountryExists {scriptMessageWho :: Text}
    | MsgExists {scriptMessageYn :: Bool}
    | MsgSameReligion {scriptMessageWhom :: Text}
    | MsgReligion {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgSameReligionGroup {scriptMessageWhom :: Text}
    | MsgReligionGroup {scriptMessage_ :: Text, scriptMessageWhat :: Text}
    | MsgChangeSameReligion {scriptMessageWhom :: Text}
    | MsgChangeReligion {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgIsCoreOf {scriptMessageWhom :: Text}
    | MsgHasCoreOn {scriptMessageWhat :: Text}
    | MsgHasClaim {scriptMessageWho :: Text}
    | MsgHasClaimOn {scriptMessageWhat :: Text}
    | MsgIsAIControlled {scriptMessageYn :: Bool}
    | MsgHasCardinal {scriptMessageYn :: Bool}
    | MsgHasHeir {scriptMessageYn :: Bool}
    | MsgHasOwnerCulture {scriptMessageYn :: Bool}
    | MsgHasOwnerReligion {scriptMessageYn :: Bool}
    | MsgHasPort {scriptMessageYn :: Bool}
    | MsgHasSeatInParliament {scriptMessageYn :: Bool}
    | MsgIsInRegency {scriptMessageYn :: Bool}
    | MsgUnderSiege {scriptMessageYn :: Bool}
    | MsgAtWar {scriptMessageYn :: Bool}
    | MsgIsCapital {scriptMessageYn :: Bool}
    | MsgIsCity {scriptMessageYn :: Bool}
    | MsgIsColony {scriptMessageYn :: Bool}
    | MsgIsEmperor {scriptMessageYn :: Bool}
    | MsgIsFemale {scriptMessageYn :: Bool}
    | MsgIsLesserInUnion {scriptMessageYn :: Bool}
    | MsgIsLooted {scriptMessageYn :: Bool}
    | MsgIsOverseas {scriptMessageYn :: Bool}
    | MsgIsPartOfHRE {scriptMessageYn :: Bool}
    | MsgIsCenterOfReformation {scriptMessageYn :: Bool}
    | MsgIsSubject {scriptMessageYn :: Bool}
    | MsgPapacyIsActive {scriptMessageYn :: Bool}
    | MsgHasBeenPlayer {scriptMessageYn :: Bool}
    | MsgGainCB {scriptMessageCbtype :: Text, scriptMessageWhom :: Text}
    | MsgGainCBDuration {scriptMessageCbtype :: Text, scriptMessageWhom :: Text, scriptMessageMonths :: Double}
    | MsgReverseGainCB {scriptMessageCbtype :: Text, scriptMessageWho :: Text}
    | MsgReverseGainCBDuration {scriptMessageCbtype :: Text, scriptMessageWho :: Text, scriptMessageMonths :: Double}
    | MsgFactionGainInfluence {scriptMessageIcon :: Text, scriptMessageWhom :: Text, scriptMessageAmt :: Double}
    | MsgFactionInPower {scriptMessageIcon :: Text, scriptMessageWhom :: Text}
    | MsgHasFactions {scriptMessageYn :: Bool}
    | MsgHasBuilding {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgIndefinitely
    | MsgForDays {scriptMessageDays :: Double}
    | MsgEstateLoyalty {scriptMessageIcon :: Text, scriptMessageWho :: Text, scriptMessageAmt :: Double}
    | MsgEstateInfluence {scriptMessageIcon :: Text, scriptMessageWho :: Text, scriptMessageAmt :: Double}
    | MsgAddEstateLoyalty {scriptMessageIcon :: Text, scriptMessageWho :: Text, scriptMessageAmt :: Double}
    | MsgAddEstateInfluence {scriptMessageIcon :: Text, scriptMessageWho :: Text, scriptMessageAmt :: Double}
    | MsgEstateLoyaltyModifier {scriptMessageIcon :: Text, scriptMessageWho :: Text, scriptMessageWhat :: Text, scriptMessageAmt :: Double, scriptMessageDur :: Text}
    | MsgEstateInfluenceModifier {scriptMessageIcon :: Text, scriptMessageWho :: Text, scriptMessageWhat :: Text, scriptMessageAmt :: Double, scriptMessageDur :: Text}
    | MsgAddOpinion {scriptMessageModid :: Text, scriptMessageWhat :: Text, scriptMessageWhom :: Text}
    | MsgReverseAddOpinion {scriptMessageModid :: Text, scriptMessageWhat :: Text, scriptMessageWho :: Text}
    | MsgAddOpinionDur {scriptMessageModid :: Text, scriptMessageWhat :: Text, scriptMessageWhom :: Text, scriptMessageYears :: Double}
    | MsgReverseAddOpinionDur {scriptMessageModid :: Text, scriptMessageWhat :: Text, scriptMessageWho :: Text, scriptMessageYears :: Double}
    | MsgMutualOpinion {scriptMessageModid :: Text, scriptMessageWhat :: Text, scriptMessageWhom :: Text}
    | MsgMutualOpinionDur {scriptMessageModid :: Text, scriptMessageWhat :: Text, scriptMessageWhom :: Text, scriptMessageDays :: Double}
    | MsgHasOpinionMod {scriptMessageModid :: Text, scriptMessageWhat :: Text, scriptMessageWhom :: Text}
    | MsgRemoveOpinionMod {scriptMessageModid :: Text, scriptMessageWhat :: Text, scriptMessageWhom :: Text}
    | MsgAddTreasury {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAddYearsOfIncome {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNewHeir
    | MsgNewHeirClaim {scriptMessageClaim :: Double}
    | MsgNewHeirDynasty {scriptMessageFlag :: Text}
    | MsgNewHeirDynastyClaim {scriptMessageFlag :: Text, scriptMessageClaim :: Double}
    | MsgNewHeirAge {scriptMessageAge :: Double}
    | MsgNewHeirAgeClaim {scriptMessageAge :: Double, scriptMessageClaim :: Double}
    | MsgNewHeirAgeFlag {scriptMessageAge :: Double, scriptMessageFlag :: Text}
    | MsgNewHeirAgeFlagClaim {scriptMessageAge :: Double, scriptMessageFlag :: Text, scriptMessageClaim :: Double}
    | MsgBuildToForcelimitLand {scriptMessageIcon :: Text, scriptMessageInfantry :: Double, scriptMessageCavicon :: Text, scriptMessageCavalry :: Double, scriptMessageArticon :: Text, scriptMessageArtillery :: Double}
    | MsgBuildToForcelimitNavy {scriptMessageHeavyicon :: Text, scriptMessageHeavy :: Double, scriptMessageLighticon :: Text, scriptMessageLight :: Double, scriptMessageGallicon :: Text, scriptMessageGalley :: Double, scriptMessageTranspicon :: Text, scriptMessageTransport :: Double}
    | MsgProvinceEvent
    | MsgCountryEvent
    | MsgTriggerEvent {scriptMessageEvttype :: Text, scriptMessageEvtid :: Text, scriptMessageName :: Text}
    | MsgTriggerEventDays {scriptMessageEvttype :: Text, scriptMessageEvtid :: Text, scriptMessageName :: Text, scriptMessageDays :: Double}
    | MsgDeclareWarWithCB {scriptMessageWhom :: Text, scriptMessageCb :: Text}
    | MsgGainAdvisor {scriptMessageSkill :: Double}
    | MsgGainAdvisorDiscount {scriptMessageSkill :: Double}
    | MsgGainAdvisorLoc {scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorLocDiscount {scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorName {scriptMessageName :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorNameDiscount {scriptMessageName :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorNameLoc {scriptMessageName :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorNameLocDiscount {scriptMessageName :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorType {scriptMessageAdvtype :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorTypeDiscount {scriptMessageAdvtype :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorTypeLoc {scriptMessageAdvtype :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorTypeLocDiscount {scriptMessageAdvtype :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorTypeName {scriptMessageAdvtype :: Text, scriptMessageName :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorTypeNameDiscount {scriptMessageAdvtype :: Text, scriptMessageName :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorTypeNameLoc {scriptMessageAdvtype :: Text, scriptMessageName :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainAdvisorTypeNameLocDiscount {scriptMessageAdvtype :: Text, scriptMessageName :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisor {scriptMessageFemale :: Bool, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorDiscount {scriptMessageFemale :: Bool, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorLoc {scriptMessageFemale :: Bool, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorLocDiscount {scriptMessageFemale :: Bool, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorName {scriptMessageFemale :: Bool, scriptMessageName :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorNameDiscount {scriptMessageFemale :: Bool, scriptMessageName :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorNameLoc {scriptMessageFemale :: Bool, scriptMessageName :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorNameLocDiscount {scriptMessageFemale :: Bool, scriptMessageName :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorType {scriptMessageFemale :: Bool, scriptMessageAdvtype :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorTypeDiscount {scriptMessageFemale :: Bool, scriptMessageAdvtype :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorTypeLoc {scriptMessageFemale :: Bool, scriptMessageAdvtype :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorTypeLocDiscount {scriptMessageFemale :: Bool, scriptMessageAdvtype :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorTypeName {scriptMessageFemale :: Bool, scriptMessageAdvtype :: Text, scriptMessageName :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorTypeNameDiscount {scriptMessageFemale :: Bool, scriptMessageAdvtype :: Text, scriptMessageName :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorTypeNameLoc {scriptMessageFemale :: Bool, scriptMessageAdvtype :: Text, scriptMessageName :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgGainFemaleAdvisorTypeNameLocDiscount {scriptMessageFemale :: Bool, scriptMessageAdvtype :: Text, scriptMessageName :: Text, scriptMessageWhere :: Text, scriptMessageSkill :: Double}
    | MsgRebelLeaderRuler
    | MsgNewRuler {scriptMessageRegent :: Bool}
    | MsgNewRulerLeader {scriptMessageRegent :: Bool, scriptMessageName :: Text}
    | MsgNewRulerAttribs {scriptMessageRegent :: Bool}
    | MsgNewRulerLeaderAttribs {scriptMessageRegent :: Bool, scriptMessageName :: Text}
    | MsgLeaderRuler {scriptMessageRegent :: Bool, scriptMessageName :: Text}
    | MsgNewRulerName {scriptMessageName :: Text}
    | MsgNewRulerDynasty {scriptMessageName :: Text}
    | MsgNewRulerAge {scriptMessageAmt :: Double}
    | MsgNewRulerAdm {scriptMessageFixed :: Bool, scriptMessageAmt :: Double}
    | MsgNewRulerDip {scriptMessageFixed :: Bool, scriptMessageAmt :: Double}
    | MsgNewRulerMil {scriptMessageFixed :: Bool, scriptMessageAmt :: Double}
    | MsgNewRulerClaim {scriptMessageAmt :: Double}
    | MsgNewRulerFixed {scriptMessageAdm :: Double, scriptMessageDip :: Double, scriptMessageMil :: Double}
    | MsgEstateHasInfluenceModifier {scriptMessageIcon :: Text, scriptMessageEstate :: Text, scriptMessageModifier :: Text}
    | MsgTriggerSwitch
    | MsgTriggerSwitchClause {scriptMessageCond :: Text}
    | MsgProvinceHasRebels {scriptMessageIcon :: Text, scriptMessageRtype :: Text}
    | MsgRebelsFriendlyTo {scriptMessageFriend :: Text}
    | MsgRebelsLedBy {scriptMessageLeader :: Text}
    | MsgRebelsGainProgress {scriptMessageAmt :: Double}
    | MsgSpawnRebels {scriptMessageRtype :: Text, scriptMessageSize :: Double, scriptMessageFriend :: Text, scriptMessageLeader :: Text, scriptMessageWin :: Bool, scriptMessageProgress :: Text}
    | MsgRebelsHaveRisen {scriptMessageIcon :: Text, scriptMessageRtype :: Text}
    | MsgTagGainsCore {scriptMessageWho :: Text}
    | MsgGainCoreOnProvince {scriptMessageProv :: Text}
    | MsgHasDLC {scriptMessageIcon :: Text, scriptMessageDlc :: Text}
    | MsgProvince {scriptMessageWhere :: Text}
    | MsgTechGroup {scriptMessageIcon :: Text, scriptMessageName :: Text}
    | MsgNumOfReligion {scriptMessageIcon :: Text, scriptMessageName :: Text, scriptMessageAmt :: Double}
    | MsgIsStrongestTradePower {scriptMessageWho :: Text}
    | MsgAreaIs {scriptMessageWhat :: Text}
    | MsgDominantReligion {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgHREReligion {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgSetHREReligionLocked {scriptMessageYn :: Bool}
    | MsgSetHREReligion {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgSetHREHereticReligion {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgSignWestphalia
    | MsgHRELeaguesEnabled {scriptMessageYn :: Bool}
    | MsgHREReligionLocked {scriptMessageYn :: Bool}
    | MsgHREWestphalia {scriptMessageYn :: Bool}
    | MsgIsElector {scriptMessageYn :: Bool}
    | MsgNoHREReforms
    | MsgHREPassedReform {scriptMessageWhat :: Text}
    | MsgEnableHRELeagues
    | MsgIsInLeagueWar {scriptMessageYn :: Bool}
    | MsgIsLeagueEnemy {scriptMessageWhom :: Text}
    | MsgReligionYears {scriptMessageIcon :: Text, scriptMessageName :: Text, scriptMessageYears :: Double}
    | MsgHasIdea {scriptMessageWhat :: Text}
    | MsgReligionProvinces {scriptMessageIcon :: Text, scriptMessageName :: Text, scriptMessageAmt :: Double}
    | MsgGoodsProvinces {scriptMessageIcon :: Text, scriptMessageName :: Text, scriptMessageAmt :: Double}
    | MsgHasAristocraticIdea {scriptMessageName :: Text, scriptMessageNum :: Int}
    | MsgHasEconomicIdea {scriptMessageName :: Text, scriptMessageNum :: Int}
    | MsgHasDefensiveIdea {scriptMessageName :: Text, scriptMessageNum :: Int}
    | MsgHasInnovativeIdea {scriptMessageName :: Text, scriptMessageNum :: Int}
    | MsgHasOffensiveIdea {scriptMessageName :: Text, scriptMessageNum :: Int}
    | MsgHasMaritimeIdea {scriptMessageName :: Text, scriptMessageNum :: Int}
    | MsgColonists {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMayExplore
    | MsgGainColonialRange {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGlobalSettlers {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGlobalTariffs {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNavalForcelimitMod {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainOverseasCB
    | MsgGainPrimitivesCB
    | MsgNavyTradition {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyNavyTradition {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHeavyShipCombatAbility {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLightShipCombatAbility {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGalleyCombatAbility {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGlobalShipRepair {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGlobalShipCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgRegimentCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNavalLeaderManeuver {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgBlockadeEfficiency {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainSeaRepair
    | MsgPrimitives {scriptMessageYn :: Bool}
    | MsgGlobalTaxModifier {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgBuildCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyInflationReduction {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgInterestPerAnnum {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGlobalAutonomy {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLandMaintenanceMod {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNavalMaintenanceMod {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgProdEff {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgProdEffBonus {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDevelCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainReligiousCB
    | MsgMissionaries {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgStabilityCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMissionaryStrength {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgToleranceHeathen {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgToleranceHeretic {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgToleranceTrue {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyPapalInfluence {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyDevotion {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMonthlyFervor {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgChurchPowerModifier {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgPrestige {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyPrestige {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMissionaryStrengthVsHeretics {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCultureConvCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHasOpinion {scriptMessageAmt :: Double, scriptMessageWhom :: Text}
    | MsgNormalOrHistoricalNations {scriptMessageYn :: Bool}
    | MsgIsCustomNation {scriptMessageYn :: Bool}
    | MsgReligionEnabled {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgCapitalIs {scriptMessageWhat :: Text}
    | MsgFullIdeaGroup {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgTradeIncomePercentage {scriptMessageAmt :: Double}
    | MsgReligiousUnity {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgReligiousUnityBonus {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHasADM {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHasDIP {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHasMIL {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgRankDuchy
    | MsgRankKingdom
    | MsgRankEmpire
    | MsgSetRankDuchy
    | MsgSetRankKingdom
    | MsgSetRankEmpire
    | MsgOverextension {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgRandomNewWorld {scriptMessageYn :: Bool}
    | MsgIsColonialNation {scriptMessageYn :: Bool}
    | MsgIsFormerColonialNation {scriptMessageYn :: Bool}
    | MsgIsNomad {scriptMessageYn :: Bool}
    | MsgReligionReformed {scriptMessageYn :: Bool}
    | MsgChangeTag {scriptMessageWho :: Text}
    | MsgSetInEmpire {scriptMessageYn :: Bool}
    | MsgHasSecondaryReligion {scriptMessageYn :: Bool}
    | MsgSecondaryReligion {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgIsDefenderOfFaith {scriptMessageYn :: Bool}
    | MsgLegitimacyOrHordeUnity {scriptMessageAmt :: Double}
    | MsgCheckVariable {scriptMessageIcon :: Text, scriptMessageWhat :: Text, scriptMessageAmt :: Double}
    | MsgChangeTechGroup {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgChangeUnitType {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgNoBaseWeight
    | MsgAIBaseWeight {scriptMessageAmt :: Double}
    | MsgAIFactorOneline {scriptMessageFactor :: Text, scriptMessageMultiplier :: Double}
    | MsgAIFactorHeader {scriptMessageMultiplier :: Double}
    | MsgLucky {scriptMessageYn :: Bool}
    | MsgHasAdvisorLevel {scriptMessageIcon :: Text, scriptMessageWhat :: Text, scriptMessageLevel :: Double}
    | MsgNumRoyalMarriages {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgIsBankrupt {scriptMessageYn :: Bool}
    | MsgNumColonialSubjects {scriptMessageAmt :: Double}
    | MsgTradeEfficiency {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgTradeEfficiencyBonus {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHasWarTaxes {scriptMessageYn :: Bool}
    | MsgRevoltPercentage {scriptMessageAmt :: Double}
    | MsgHasAnyDisaster {scriptMessageYn :: Bool}
    | MsgHasActivePolicy {scriptMessageWhat :: Text}
    | MsgHasDucats {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHasParliament {scriptMessageYn :: Bool}
    | MsgHasTruce {scriptMessageYn :: Bool}
    | MsgNumRebelControlledProvinces {scriptMessageAmt :: Double}
    | MsgFortLevel {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHasTradeModifier {scriptMessageIcon :: Text, scriptMessageWho :: Text, scriptMessageWhat :: Text}
    | MsgIsMonth {scriptMessageWhat :: Text}
    | MsgIsSea {scriptMessageYn :: Bool}
    | MsgHeavyShip {scriptMessageWhom :: Text}
    | MsgLightShip {scriptMessageWhom :: Text}
    | MsgGalley {scriptMessageWhom :: Text}
    | MsgNumColonies {scriptMessageAmt :: Double}
    | MsgChangeCulture {scriptMessageWhat :: Text}
    | MsgNavalForcelimit {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgBlockade {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCreateAlliance {scriptMessageWhom :: Text}
    | MsgAddLocalUnrest {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGoldIncomePercentage {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgIsTribal {scriptMessageYn :: Bool}
    | MsgSetCapital {scriptMessageWhat :: Text}
    | MsgChangePrimaryCulture {scriptMessageWhat :: Text}
    | MsgColonialRegion {scriptMessageWhere :: Text}
    | MsgJuniorUnionWith {scriptMessageWhom :: Text}
    | MsgSeniorUnionWith {scriptMessageWhom :: Text}
    | MsgVassalOf {scriptMessageWhom :: Text}
    | MsgOverlordOf {scriptMessageWhom :: Text}
    | MsgChangeProvinceName {scriptMessageWhat :: Text}
    | MsgRenameCapital {scriptMessageWhat :: Text}
    | MsgOwnsOrVassal {scriptMessageWhere :: Text}
    | MsgIsInColonialRange {scriptMessageWhom :: Text}
    | MsgConstructingGreatProject {scriptMessageWhat :: Text}
    | MsgConstructing {scriptMessageWhat :: Text}
    | MsgStartConstructingGreatProject {scriptMessageWhat :: Text}
    | MsgCancelConstruction
    | MsgYearsOfIncome {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLibertyDesire {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainLibertyDesire {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgColonialParent
    | MsgAlways {scriptMessageYn :: Bool}
    | MsgCapitalCultureDominant
    | MsgNumUnions {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNumVassals {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgFreeVassal {scriptMessageWhom :: Text}
    | MsgHasMissionary {scriptMessageYn :: Bool}
    | MsgNavyPercentage {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgWasForceConverted {scriptMessageYn :: Bool}
    | MsgFemaleEmperorAllowed {scriptMessageYn :: Bool}
    | MsgImperialAuthority {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHasFemaleHeir {scriptMessageYn :: Bool}
    | MsgPiety {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgIsInTutorial {scriptMessageYn :: Bool}
    | MsgGainFervor {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainChurchPower {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgIncomeFromVassals {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgTimeToFabricateClaims {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDiploAnnexCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAEImpact {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDiploRep {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgEnvoyTravelTime {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDiploRelations {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgVassalForcelimitContribution {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgUnjustifiedDemands {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgInfantryCombatAbility {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCavalryCombatAbility {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgArtilleryCombatAbility {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgShipDurability {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMoraleOfArmies {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMoraleOfNavies {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNavalAttrition {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDiscipline {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNationalManpowerMod {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgManpowerRecoverySpeed {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAvailableMercs {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGarrisonSize {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLandAttrition {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLandForcelimitMod {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgPrestigeDecay {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMercCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgTechCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgPossibleAdvisors {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgReduceInflationCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLeadersWithoutUpkeep {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAdvisorCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCoreCreationCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMercMaintenance {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgADMTechCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDIPTechCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGoodsProducedMod {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNavalLeaderFire {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNavalLeaderShock {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgPrestigeFromLand {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgPrestigeFromNaval {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDiplomats {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgWarExhaustionCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgImproveRelations {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgProvinceWarscoreCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgReducedStabImpacts
    | MsgNationalUnrest {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearsOfSeparatism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAccCultureThreshold {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgBetterRelationsOverTime {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgIdeaCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMerchants {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgRecruitmentTime {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgShipbuildingTime {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGlobalTradePower {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgEmbargoEff {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgPrivateerEff {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGlobalSpyDefence {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMaySabotageReputation
    | MsgSpyOffense {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCovertActionRelationImpact {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMayStudyTech
    | MsgMaySowDiscontent
    | MsgMayAgitateForLiberty
    | MsgMayInfiltrateAdministration
    | MsgRebelSupportEff {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgArmyTraditionDecay {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNavyTraditionDecay {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgInfantryCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCavalryCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgArtilleryCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMILTechCost {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgHostileCoreCreation {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCaravanPower {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLandLeaderFire {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLandLeaderShock {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLandLeaderManeuver {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgLeaderSiege {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgFortDefense {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgFortMaintenance {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgReinforceSpeed {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAttritionForEnemies {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgSiegeAbility {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgRecoverArmyMoraleSpeed {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgTradeRange {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgTradeSteering {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgTextIs {scriptMessageWhat :: Text}
    | MsgAnyOwnedPlanet
    | MsgAnyOwnedShip
    | MsgAnyPop
    | MsgEveryOwnedPlanet
    | MsgEveryOwnedPop
    | MsgRandomOwnedShip
    | MsgRandomPop
    | MsgRandomSystem
    | MsgRandomTile
    | MsgGainTrait {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgIsFreeOrTributaryTrigger
    | MsgAbsolutism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainAbsolutism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgMaxAbsolutism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgYearlyAbsolutism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCurrentAge {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgAcceptedCulture {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgCalcTrueIf {scriptMessageAmt :: Double}
    | MsgGainConstructionProgress {scriptMessageAmt :: Double}
    | MsgGainHarmonizationProgress {scriptMessageAmt :: Double}
    | MsgGainHeirSupport {scriptMessageAmt :: Double}
    | MsgGainYearsOfSeparatism {scriptMessageAmt :: Double}
    | MsgAuth {scriptMessageAmt :: Double}
    | MsgGainColonyPopulation {scriptMessageAmt :: Double}
    | MsgGainCorruption {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainDevastation {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainHarmony {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainMilitarization {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainProsperity {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainSplendor {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAddTariffValue {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainYearlySailors {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAdminEfficiencyBonus {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAdminEfficiency {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgDisasterMod
    | MsgAddClaimFor {scriptMessageWho :: Text}
    | MsgAddClaimOn {scriptMessageWhere :: Text}
    | MsgAddAcceptedCulture {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgAddBuilding {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgAddHarmonizedReligion {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgAddHeirPersonality {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgAddConsortPersonality {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgAddRulerPersonality {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgAddCenterOfReformation {scriptMessageIcon :: Text, scriptMessageWhat :: Text}
    | MsgAddHistoricalRival {scriptMessageWho :: Text}
    | MsgAddTruceWith {scriptMessageWho :: Text}
    | MsgGainSailors {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainSailorsFrac {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgArmyProfessionalism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgArmyProfessionalismAs {scriptMessageIcon :: Text, scriptMessageWhom :: Text}
    | MsgGainArmyProfessionalism {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgSailorsPercentage {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgNationalSailorsMod {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgCorruption {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAddIncidentVariableValue {scriptMessageIcon :: Text, scriptMessageWhat :: Text, scriptMessageAmt :: Double}
    | MsgAddInstitutionEmbracement {scriptMessageIcon :: Text, scriptMessageWhat :: Text, scriptMessageAmt :: Double}
    | MsgAddIsolationism {scriptMessageAmt :: Double}
    | MsgGainMandate {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgAddMandateEffect
    | MsgAddMandateLargeEffect
    | MsgAddMeritocracyEffect
    | MsgAddMeritocracyLargeEffect
    | MsgAddNextInstitutionEmbracement {scriptMessageAmt :: Double}
    | MsgAddSpyNetworkFrom {scriptMessageIcon :: Text, scriptMessageWhom :: Text, scriptMessageAmt :: Double}
    | MsgAddSpyNetworkIn {scriptMessageIcon :: Text, scriptMessageWhom :: Text, scriptMessageAmt :: Double}
    | MsgEventTarget {scriptMessageTag :: Text}
    | MsgEventTargetVar {scriptMessageTag :: Text}
    | MsgSudebnikProgress {scriptMessageAmt :: Double}
    | MsgOprichninaProgress {scriptMessageAmt :: Double}
    | MsgStreltsyProgress {scriptMessageAmt :: Double}
    | MsgAddLootFromProvinceEffect
    | MsgAddBurghersLoyalty
    | MsgAddChurchLoyalty
    | MsgAddCossacksLoyalty
    | MsgAddDhimmiLoyalty
    | MsgAddNoblesLoyalty
    | MsgReduceBurghersLoyalty
    | MsgReduceChurchLoyalty
    | MsgReduceCossacksLoyalty
    | MsgReduceDhimmiLoyalty
    | MsgReduceNoblesLoyalty
    | MsgAddStabilityOrAdm
    | MsgAddTrust {scriptMessageWhom :: Text, scriptMessageAmt :: Double}
    | MsgAddTrustMutual {scriptMessageWhom :: Text, scriptMessageAmt :: Double}
    | MsgSaveEventTargetAs {scriptMessageName :: Text}
    | MsgHasSavedEventTarget {scriptMessageName :: Text}
    | MsgRemoveClaim {scriptMessageWho :: Text}
    | MsgTribalAllegianceBonus {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgTribalAllegiance {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgGainTribalAllegiance {scriptMessageIcon :: Text, scriptMessageAmt :: Double}
    | MsgArmySizePc {scriptMessageAmt :: Double}
    | MsgBuildHeavyShips {scriptMessageIcon :: Text, scriptMessageAmt :: Double, scriptMessageSpeed :: Double, scriptMessageCost :: Double}
    | MsgBuildLightShips {scriptMessageIcon :: Text, scriptMessageAmt :: Double, scriptMessageSpeed :: Double, scriptMessageCost :: Double}
    | MsgBuildGalleys {scriptMessageIcon :: Text, scriptMessageAmt :: Double, scriptMessageSpeed :: Double, scriptMessageCost :: Double}
    | MsgBuildTransports {scriptMessageIcon :: Text, scriptMessageAmt :: Double, scriptMessageSpeed :: Double, scriptMessageCost :: Double}

-- | Whether to default to English localization.
useEnglish :: [Text] -> Bool
useEnglish [] = True
useEnglish ("en":_) = True
useEnglish _ = False

instance RenderMessage Script ScriptMessage where
    renderMessage _ (useEnglish -> True) msg = case msg of
        MsgUnprocessed {scriptMessageMsg = _msg}
            -> _msg
        MsgYes {scriptMessageIcon = _icon}
            -> mconcat
                [ _icon
                , " 是"
                ]
        MsgNo {scriptMessageIcon = _icon}
            -> mconcat
                [ _icon
                , " 否"
                ]
        MsgAddCardinal
            -> "获得一名主教"
        MsgHeirDies
            -> "继承人去世"
        MsgRulerDies
            -> "君主去世"
        MsgLoseCardinal
            -> "失去一名主教"
        MsgGainADM {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 行政点数"
                ]
        MsgGainAT {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 陆军传统"
                ]
        MsgGainAuth {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 权威"
                ]
        MsgGainBT {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 基础税收"
                ]
        MsgGainBP {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 基础生产"
                ]
        MsgGainBM {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 基础人力"
                ]
        MsgGainDIP {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 外交点数"
                ]
        MsgGainDoom {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum False _amt)
                , " 末日值"
                ]
        MsgHeirGainClaim {scriptMessageAmt = _amt}
            -> mconcat
                [ "继承人 "
                , gainsOrLoses _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 正统性"
                ]
        MsgGainDevotion {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 奉献度"
                ]
        MsgGainHordeUnity {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 部落统一度"
                ]
        MsgGainImperialAuthority {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 帝国权威"
                ]
        MsgGainKarma {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 业力"
                ]
        MsgGainLegitimacy {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 正统性"
                ]
        MsgGainMIL {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 军事点数"
                ]
        MsgGainNavyTradition {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 海军传统"
                ]
        MsgGainPapalInfluence {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 教宗影响"
                ]
        MsgGainPrestige {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 威望"
                ]
        MsgGainStability {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 稳定度"
                ]
        MsgGainWarExhaustion {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum False _amt)
                , " 厌战度"
                ]
        MsgGainYearlyManpower {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 年的人力值"
                ]
        MsgGainADMSkill {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "君主 "
                , gainsOrLoses _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 行政技能"
                ]
        MsgGainDIPSkill {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "君主 "
                , gainsOrLoses _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 外交技能"
                ]
        MsgGainMILSkill {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "君主 "
                , gainsOrLoses _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 军事技能"
                ]
        MsgGainSiegeProgress {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 围攻进度"
                ]
        MsgGainPatAuth {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (reducedNum (colourPc True) _amt)
                , " 主教权威"
                ]
        MsgGainPiety {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (reducedNum (colourPc True) _amt)
                , " 虔诚"
                ]
        MsgGainRepTrad {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (reducedNum (colourNum True) _amt)
                , " 共和传统"
                ]
        MsgGainInflation {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourPc False _amt)
                , " 通货膨胀"
                ]
        MsgGainLocalAutonomy {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourPc False _amt)
                , " 本地自治度"
                ]
        MsgReformDesire {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "{{icon|catholic}} 天主教拥有至少 "
                , _icon
                , " "
                , toMessage (reducedNum plainPc _amt)
                , " 改革呼声"
                ]
        MsgGainReformDesire {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "{{icon|catholic}} 天主教 "
                , gainsOrLoses _amt
                , " "
                , _icon
                , " "
                , toMessage (reducedNum (colourPc False) _amt)
                , " 改革呼声"
                ]
        MsgGainMercantilism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (reducedNum (colourPc True) _amt)
                , " 重商主义"
                ]
        MsgGainMP {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 人力"
                ]
        MsgGainMPFrac {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " manpower equal to "
                , toMessage (reducedNum (colourPc True) _amt)
                , " of maximum"
                ]
        MsgSeparatism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , "年分裂主义"
                ]
        MsgCountryMod
            -> "国家修正"
        MsgProvMod
            -> "省份修正"
        MsgPermanentProvMod
            -> "永久省份修正"
        MsgRulerMod
            -> "君主修正"
        MsgTradeMod
            -> "贸易修正"
        MsgAddMod {scriptMessageModid = _modid, scriptMessageName = _name, scriptMessageDays = _days}
            -> mconcat
                [ "获得修正 "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " --> "
                , toMessage (roundNumNoSpace _days)
                , " 天"
                ]
        MsgGainMod {scriptMessageModid = _modid, scriptMessageType = _type, scriptMessageName = _name}
            -> mconcat
                [ "获得"
                , _type
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " --> "
                ]
        MsgGainModDur {scriptMessageModid = _modid, scriptMessageType = _type, scriptMessageName = _name, scriptMessageDays = _days}
            -> mconcat
                [ "获得"
                , _type
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " --> "
                , toMessage (roundNumNoSpace _days)
                , " 天"
                ]
        MsgGainModPow {scriptMessageModid = _modid, scriptMessageType = _type, scriptMessageName = _name, scriptMessagePow = _pow}
            -> mconcat
                [ "获得"
                , _type
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " --> ("
                , toMessage (colourNumSign True _pow)
                , " 点数"
                ]
        MsgGainModPowDur {scriptMessageModid = _modid, scriptMessageType = _type, scriptMessageName = _name, scriptMessagePow = _pow, scriptMessageDays = _days}
            -> mconcat
                [ "获得"
                , _type
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " --> ("
                , toMessage (colourNumSign True _pow)
                , " Power) "
                , toMessage (plainNum _days)
                , " 天"
                ]
        MsgActorGainsMod {scriptMessageModid = _modid, scriptMessageWho = _who, scriptMessageType = _type, scriptMessageName = _name}
            -> mconcat
                [ _who
                , " 获得"
                , _type
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " -->"
                ]
        MsgActorGainsModDur {scriptMessageModid = _modid, scriptMessageWho = _who, scriptMessageType = _type, scriptMessageName = _name, scriptMessageDays = _days}
            -> mconcat
                [ _who
                , " 获得"
                , _type
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " --> "
                , toMessage (plainNum _days)
                , " 天"
                , plural _days "day" "days"
                ]
        MsgActorGainsModPow {scriptMessageModid = _modid, scriptMessageWho = _who, scriptMessageType = _type, scriptMessageName = _name, scriptMessagePow = _pow}
            -> mconcat
                [ _who
                , " 获得"
                , _type
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " --> ("
                , toMessage (colourNumSign True _pow)
                , " 点数"
                ]
        MsgActorGainsModPowDur {scriptMessageModid = _modid, scriptMessageWho = _who, scriptMessageType = _type, scriptMessageName = _name, scriptMessagePow = _pow, scriptMessageDays = _days}
            -> mconcat
                [ _who
                , " 获得"
                , _type
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " --> ("
                , toMessage (colourNumSign True _pow)
                , " Power) for "
                , toMessage (plainNum _days)
                , " 天"
                ]
        MsgHasModifier {scriptMessageModid = _modid, scriptMessageKind = _kind, scriptMessageName = _name}
            -> mconcat
                [ "拥有"
                , _kind
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _modid
                , " -->"
                ]
        MsgRemoveModifier {scriptMessageModid = _modid, scriptMessageKind = _kind, scriptMessageName = _name}
            -> mconcat
                [ "移除"
                , _kind
                , " ''\""
                , _name
                , "\"'' <!-- "
                , _modid
                , " -->"
                ]
        MsgAllOf
            -> "全部："
        MsgOurCountry
            -> "我国："
        MsgFROM
            -> "触发者："
        MsgPREV
            -> "前者："
        MsgNoneOf
            -> "不是："
        MsgAllCoreProvince
            -> "全部核心省份："
        MsgAllProvince
            -> "全部省份："
        MsgAllSubjectCountries
            -> "全部附属国："
        MsgArea
            -> "该省份所属的地区："
        MsgAtLeastOneOf
            -> "至少满足之一："
        MsgAnyActiveTradeNode
            -> "任意存在商人团的贸易节点："
        MsgAnyAlly
            -> "任意盟友："
        MsgAnyCoreCountry
            -> "任意拥有该省核心的国家："
        MsgAnyCoreProvince
            -> "任意核心省份："
        MsgAnyCountry
            -> "全球任意国家："
        MsgAnyEmptyNeighborProvince
            -> "任意相邻未殖民省份："
        MsgAnyEnemyCountry
            -> "任意敌对国家："
        MsgAnyHereticProvince
            -> "任意信仰异端的省份："
        MsgAnyKnownCountry
            -> "任意未知国家："
        MsgAnyNeighborCountry
            -> "任意相邻国家："
        MsgAnyNeighborProvince
            -> "任意相邻省份："
        MsgAnyOwnedProvince
            -> "任意拥有的省份："
        MsgAnyPrivateeringCountry
            -> "任意在此节点私掠的国家："
        MsgAnyProvince
            -> "任意省份："
        MsgAnyRival
            -> "任意宿敌："
        MsgAnySubject
            -> "任意附属国："
        MsgAnyTradeNode
            -> "任意贸易节点："
        MsgCapital
            -> "首都："
        MsgController
            -> "省份控制者："
        MsgElse
            -> "否则："
        MsgEmperor
            -> "神圣罗马帝国皇帝："
        MsgAllCountries
            -> "世界所有国家："
        MsgAllNeighborCountries
            -> "所有相邻国家：All neighbouring countries:"
        MsgEveryActiveTradeNode
            -> "所有存在商人团的贸易节点："
        MsgEveryAlly
            -> "所有盟友："
        MsgEveryCountry
            -> "世界所有国家："
        MsgEveryCoreCountry
            -> "所有拥有核心的国家："
        MsgEveryCoreProvince
            -> "所有核心省份："
        MsgEveryEnemyCountry
            -> "所有敌对国家："
        MsgEveryHereticProvince
            -> "所有信仰异端的省份："
        MsgEveryKnownCountry
            -> "所有已知国家："
        MsgEveryNeighborCountry
            -> "所有相邻国家："
        MsgEveryNeighborProvince
            -> "所有相邻省份："
        MsgEveryOwnedProvince
            -> "所有拥有的省份："
        MsgEveryProvince
            -> "全球所有省份："
        MsgEveryRival
            -> "所有宿敌："
        MsgEverySubject
            -> "所有附属国："
        MsgHiddenEffect
            -> "潜在效果："
        MsgIf
            -> "如果："
        MsgLimit
            -> "仅限于："
        MsgMostProvinceTradePower
            -> "拥有最强省份贸易力量的国家："
        MsgOverlord
            -> "宗主国："
        MsgOwner
            -> "省份所有者："
        MsgRandomActiveTradeNode
            -> "随机一个存在商人团的贸易节点："
        MsgRandomAlly
            -> "随机一个盟友："
        MsgRandomCoreCountry
            -> "随机一个拥有该省核心的国家："
        MsgRandomCoreProvince
            -> "随机一个核心省份："
        MsgRandomCountry
            -> "随机一个国家："
        MsgRandomElector
            -> "随机一个选帝侯："
        MsgRandomEmptyNeighborProvince
            -> "随机一个未殖民的省份："
        MsgRandomHereticProvince
            -> "随机一个信仰异端的省份："
        MsgRandomKnownCountry
            -> "随机一个已知国家："
        MsgRandomList
            -> "下列随机一个国家："
        MsgRandomNeighborCountry
            -> "随机一个相邻国家："
        MsgRandomNeighborProvince
            -> "随机一个相邻省份："
        MsgRandomOwnedProvince
            -> "随机一个拥有的省份："
        MsgRandomPrivateeringCountry
            -> "随机一个在此节点私掠的国家："
        MsgRandomProvince
            -> "随机一个省份："
        MsgRandomRival
            -> "随机一个宿敌："
        MsgRandomSubjectCountry
            -> "随机一个附属国："
        MsgRandomTradeNode
            -> "随机一个贸易节点："
        MsgStrongestTradePower
            -> "拥有最强贸易力量的国家："
        MsgWhile
            -> "当："
        MsgRandomChance {scriptMessageChance = _chance}
            -> mconcat
                [ toMessage (plainPc _chance)
                , " 概率："
                ]
        MsgRandom
            -> "以下随机之一："
        MsgChangeGovernment {scriptMessageWhat = _what}
            -> mconcat
                [ "改变政体为"
                , _what
                ]
        MsgContinentIs {scriptMessageWhat = _what}
            -> mconcat
                [ "位于"
                , _what
                ]
        MsgCultureIs {scriptMessageWhat = _what}
            -> mconcat
                [ "文化是"
                , _what
                ]
        MsgCultureIsGroup {scriptMessageWhat = _what}
            -> mconcat
                [ "属于"
                , _what
                , "文化组"
                ]
        MsgRulerIsDynasty {scriptMessageWhat = _what}
            -> mconcat
                [ "君主是"
                , _what
                , "王朝"
                ]
        MsgDisasterEnds {scriptMessageWhat = _what}
            -> mconcat
                [ "灾难 "
                , toMessage (iquotes _what)
                , " 结束"
                ]
        MsgGovernmentIs {scriptMessageWhat = _what}
            -> mconcat
                [ "政体是"
                , _what
                ]
        MsgGovernmentIsIcon {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "政体是 "
                , _icon
                , " "
                , _what
                ]
        MsgHasAdvisor {scriptMessageWhom = _whom}
            -> mconcat
                [ "拥有顾问"
                , _whom
                ]
        MsgHasAdvisorType {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "拥有 "
                , _icon
                , " "
                , _what
                ]
        MsgHasTerrain {scriptMessageWhat = _what}
            -> mconcat
                [ "拥有"
                , _what
                , "地形"
                ]
        MsgCavalrySpawnsCountry {scriptMessageWhom = _whom}
            -> mconcat
                [ "一支忠于"
                , _whom
                , "的骑兵生成了"
                ]
        MsgCavalrySpawnsProvince {scriptMessageWhere = _where}
            -> mconcat
                [ "一支骑兵生成于"
                , _where
                ]
        MsgInfantrySpawnsCountry {scriptMessageWhom = _whom}
            -> mconcat
                [ "一支忠于"
                , _whom
                , "的步兵生成了"
                ]
        MsgInfantrySpawnsProvince {scriptMessageWhere = _where}
            -> mconcat
                [ "一支步兵生成于"
                , _where
                ]
        MsgAdvisorDies {scriptMessageWho = _who}
            -> mconcat
                [ "顾问"
                , _who
                , "去世了"
                ]
        MsgPrimaryCultureIs {scriptMessageWhat = _what}
            -> mconcat
                [ "主流文化是"
                , _what
                ]
        MsgRegionIs {scriptMessageWhat = _what}
            -> mconcat
                [ "省份位于"
                , _what
                , "区域"
                ]
        MsgLoseAdvisor {scriptMessageWho = _who}
            -> mconcat
                [ "顾问"
                , _who
                , "离开了宫廷"
                ]
        MsgRemoveFromEstate {scriptMessageIcon = _icon, scriptMessageWhom = _whom}
            -> mconcat
                [ "从 "
                , _icon
                , " "
                , _whom
                , "阶层手中手中收回了省份"
                ]
        MsgDisasterOngoing {scriptMessageWhat = _what}
            -> mconcat
                [ ""
                , toMessage (iquotes _what)
                , "灾难进行中"
                ]
        MsgProvinceIs {scriptMessageWhat = _what}
            -> mconcat
                [ "省份是"
                , _what
                ]
        MsgOwns {scriptMessageWhat = _what}
            -> mconcat
                [ "拥有省份"
                , _what
                ]
        MsgOwnsCore {scriptMessageWhat = _what}
            -> mconcat
                [ "拥有核心省份"
                , _what
                ]
        MsgControls {scriptMessageWhat = _what}
            -> mconcat
                [ "控制省份"
                , _what
                ]
        MsgAdvisorExists {scriptMessageAdvisorID = _advisorID}
            -> mconcat
                [ "ID为 "
                , toMessage (plainNum _advisorID)
                , " 的顾问已存在"
                ]
        MsgAdvisorIsEmployed {scriptMessageAdvisorID = _advisorID}
            -> mconcat
                [ "ID为 "
                , toMessage (plainNum _advisorID)
                , " 的顾问已被雇佣"
                ]
        MsgClearFlag {scriptMessageFlagType = _flagType, scriptMessageName = _name}
            -> mconcat
                [ "清除"
                , _flagType
                , "flag <tt>"
                , _name
                , "</tt>"
                ]
        MsgHasFlag {scriptMessageFlagType = _flagType, scriptMessageName = _name}
            -> mconcat
                [ toMessage (T.toTitle _flagType)
                , "flag <tt>"
                , _name
                , "</tt> 已设置"
                ]
        MsgSetFlag {scriptMessageFlagType = _flagType, scriptMessageName = _name}
            -> mconcat
                [ "设置"
                , _flagType
                , "flag <tt>"
                , _name
                , "</tt>"
                ]
        MsgHadFlag {scriptMessageCategory = _category, scriptMessageName = _name, scriptMessageDays = _days}
            -> mconcat
                [ "已拥有"
                , _category
                , "flag "
                , _name
                , ""
                , toMessage (roundNum _days)
                , " 天"
                ]
        MsgCountryFlag
            -> "国家"
        MsgProvinceFlag
            -> "省份"
        MsgRulerFlag
            -> "君主"
        MsgGlobalFlag
            -> "全局"
        MsgHadCountryFlag {scriptMessageIcon = __icon, scriptMessageName = _name, scriptMessageDays = _days}
            -> mconcat
                [ "已拥有国家flag <tt>"
                , _name
                , "</tt> 至少 "
                , toMessage (roundNum _days)
                , " "
                , "天"
                ]
        MsgHadProvinceFlag {scriptMessageIcon = __icon, scriptMessageName = _name, scriptMessageDays = _days}
            -> mconcat
                [ "已拥有省份flag <tt>"
                , _name
                , "</tt> 至少 "
                , toMessage (roundNum _days)
                , " "
                , "天"
                ]
        MsgHadRulerFlag {scriptMessageIcon = __icon, scriptMessageName = _name, scriptMessageDays = _days}
            -> mconcat
                [ "已拥有君主flag <tt>"
                , _name
                , "</tt> 至少"
                , toMessage (roundNum _days)
                , " "
                , "天"
                ]
        MsgHadGlobalFlag {scriptMessageIcon = __icon, scriptMessageName = _name, scriptMessageDays = _days}
            -> mconcat
                [ "全局flag <tt>"
                , _name
                , "</tt> 已被设置至少"
                , toMessage (roundNum _days)
                , " "
                , "天"
                ]
        MsgColonySettlers {scriptMessageAmt = _amt}
            -> mconcat
                [ "殖民地至少存在"
                , toMessage (roundNum _amt)
                , "移民"
                ]
        MsgWasAtWar {scriptMessageAmt = _amt}
            -> mconcat
                [ "结束战争"
                , toMessage (roundNum _amt)
                , "个月"
                ]
        MsgHeirAge {scriptMessageAmt = _amt}
            -> mconcat
                [ "继承人至少"
                , toMessage (roundNum _amt)
                , "岁"
                ]
        MsgYearIs {scriptMessageAmt = _amt}
            -> mconcat
                [ "年份是"
                , toMessage (roundNumNoSpace _amt)
                , "或更晚"
                ]
        MsgNumLoans {scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少"
                , toMessage (plainNum _amt)
                , "笔贷款"
                ]
        MsgNumMercs {scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少"
                , toMessage (roundNum _amt)
                , "队雇佣兵"
                ]
        MsgNumMissionaries {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少"
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , "名传教士"
                ]
        MsgNumPorts {scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少"
                , toMessage (plainNum _amt)
                , "个港口"
                ]
        MsgNumRebelArmies {scriptMessageAmt = _amt}
            -> mconcat
                [ "国家当前至少存在"
                , toMessage (roundNum _amt)
                , "队叛军"
                ]
        MsgNumEmbargoes {scriptMessageAmt = _amt}
            -> mconcat
                [ "至少被其他"
                , toMessage (roundNum _amt)
                , "个国家禁运"
                ]
        MsgUnitsInProvince {scriptMessageAmt = _amt}
            -> mconcat
                [ "省份至少包括"
                , toMessage (roundNum _amt)
                , "队兵"
                ]
        MsgNumCities {scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少"
                , toMessage (roundNum _amt)
                , "个非殖民地省份"
                ]
        MsgNumCitiesThan {scriptMessageWhom = _whom}
            -> mconcat
                [ "拥有至少等同于"
                , _whom
                , "数量的城市"
                ]
        MsgToleranceToThis {scriptMessageAmt = _amt}
            -> mconcat
                [ "该宗教容忍性至少为"
                , toMessage (colourNum True _amt)
                ]
        MsgRulerADM {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "君主的 "
                , _icon
                , " 行政技能至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgADMTech {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 行政科技至少为 "
                , toMessage (roundNum _amt)
                , " 级"
                ]
        MsgArmyTradition {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 陆军传统至少为 "
                , toMessage (plainNum _amt)
                ]
        MsgArmyTraditionFromBattles {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 战斗中所得陆军传统"
                ]
        MsgYearlyArmyTradition {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 年度陆军传统"
                ]
        MsgBaseManpower {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 基础人力至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgBaseProduction {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 基础生产至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgBaseTax {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 基础税收至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgCreateAdmiral {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "获得等同于 "
                , toMessage (roundNum _amt)
                , " 海军传统时所招募的 "
                , _icon
                , " 海军上将"
                ]
        MsgCreateConquistador {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "获得等同于 "
                , toMessage (roundNum _amt)
                , " 陆军传统时所招募的 "
                , _icon
                , " 征服者"
                ]
        MsgCreateExplorer {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "获得等同于 "
                , toMessage (roundNum _amt)
                , " 海军传统时所招募的 "
                , _icon
                , " 探索者"
                ]
        MsgCreateGeneral {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "获得等同于 "
                , toMessage (roundNum _amt)
                , " 陆军传统时所招募的 "
                , _icon
                , " 将军"
                ]
        MsgDevelopment {scriptMessageIcon = _icon, scriptMessageDevelopment = _development}
            -> mconcat
                [ _icon
                , " 发展度至少为 "
                , toMessage (roundNum _development)
                ]
        MsgRulerDIP {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "君主的 "
                , _icon
                , " 外交技能至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgDIPTech {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 外交科技至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgHordeUnity {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 部落统一度至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgYearlyHordeUnity {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 年度部落统一度"
                ]
        MsgKarma {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 业力至少为 "
                , toMessage (colourPc True _amt)
                ]
        MsgLegitimacy {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 正统性至少为 "
                , toMessage (roundPc _amt)
                ]
        MsgYearlyLegitimacy {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourPcSign True _amt)
                , " 年度正统性"
                ]
        MsgRulerMIL {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "君主的 "
                , _icon
                , " 军事技能至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgMILTech {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 军事科技至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgNumAllies {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , " "
                , plural _amt "个盟友" "个盟友"
                ]
        MsgNumCardinals {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , " "
                , plural _amt "个主教" "个主教"
                ]
        MsgNumColonists {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , " "
                , plural _amt "个殖民者" "个殖民者"
                ]
        MsgNumHeavyShips {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , " 队重型"
                , plural _amt "船只" "船只"
                ]
        MsgNumLightShips {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , " 队轻型"
                , plural _amt "船只" "船只"
                ]
        MsgNumMerchants {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , " "
                , plural _amt "支商人团" "支商人团"
                ]
        MsgStability {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 稳定度至少为 "
                , toMessage (colourNumSign True _amt)
                ]
        MsgTotalDevelopment {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "国家总 "
                , _icon
                , " 发展度至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgTotalCardinals {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "至少有 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , " "
                , plural _amt "个主教" "个主教"
                , "存在于当前世界上"
                ]
        MsgUnrest {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "叛乱度至少为 "
                , _icon
                , " "
                , toMessage (colourNum False _amt)
                ]
        MsgMonthlyIncome {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 月度收入至少为 "
                , toMessage (colourNum True _amt)
                , " ducats"
                ]
        MsgWarExhaustion {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 厌战度至少为 "
                , toMessage (colourNum False _amt)
                ]
        MsgMonthlyWarExhaustion {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNum False _amt)
                , " 月度厌战度"
                ]
        MsgWarScore {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "战争分数至少为 "
                , _icon
                , " "
                , toMessage (colourPc True _amt)
                ]
        MsgRepTrad {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 共和传统至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgYearlyRepTrad {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 年度共和传统"
                ]
        MsgInflation {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 通货膨胀至少为 "
                , toMessage (colourPc False _amt)
                ]
        MsgLocalAutonomy {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 本地自治度至少为 "
                , toMessage (colourPc False _amt)
                ]
        MsgManpowerPercentage {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 人力储备至少为最大值的 "
                , toMessage (reducedNum plainPc _amt)
                ]
        MsgMercantilism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 重商主义至少为 "
                , toMessage (plainNum _amt)
                ]
        MsgChangeGoods {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "改变省份商品产出为 "
                , _icon
                , " "
                , _what
                ]
        MsgCreateAdvisor {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "获得 "
                , _icon
                , " "
                , _what
                , " 顾问"
                ]
        MsgHasIdeaGroup {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "已激活 "
                , _icon
                , " "
                , _what
                ]
        MsgProducesGoods {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "生产 "
                , _icon
                , " "
                , _what
                ]
        MsgEstateExists {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "存在 "
                ,_icon
                , " "
                , _what
                , "阶层"
                ]
        MsgHasEstate {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "拥有 "
                , _icon
                , " "
                , _what
                , "阶层"
                ]
        MsgAssignToEstate {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "分配省份给 "
                , _icon
                , " "
                , _what
                , "阶层"
                ]
        MsgRulerIsGeneral {scriptMessageIcon = _icon, scriptMessage_what = __what}
            -> mconcat
                [ "君主是 "
                , _icon
                , " 将军"
                ]
        MsgAlliedWith {scriptMessageWhom = _whom}
            -> mconcat
                [ "是 "
                , _whom
                , "的盟友"
                ]
        MsgCedeProvinceTo {scriptMessageWhom = _whom}
            -> mconcat
                [ "割让省份给 "
                , _whom
                ]
        MsgControlledBy {scriptMessageWhom = _whom}
            -> mconcat
                [ "省份由 "
                , _whom
                , "控制"
                ]
        MsgDefensiveWarAgainst {scriptMessageWhom = _whom}
            -> mconcat
                [ "处于对 "
                , _whom
                , "的防卫战中"
                ]
        MsgDiscoverCountry {scriptMessageWhom = _whom}
            -> mconcat
                [ "发现 "
                , _whom
                ]
        MsgGainClaim {scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "获得该省宣称"
                ]
        MsgGainPermanentClaimCountry {scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "该省永久宣称"
                ]
        MsgGainPermanentClaimProvince {scriptMessageWhere = _where}
            -> mconcat
                [ "获得"
                , _where
                , "的永久宣称"
                ]
        MsgHasDiscovered {scriptMessageWhomOrWhere = _whomOrWhere}
            -> mconcat
                [ "已经发现了"
                , _whomOrWhere
                ]
        MsgDiscoveredBy {scriptMessageWhom = _whom}
            -> mconcat
                [ "已被"
                , _whom
                , "发现了"
                ]
        MsgInherit {scriptMessageWhom = _whom}
            -> mconcat
                [ "继承"
                , _whom
                ]
        MsgNeighbors {scriptMessageWhom = _whom}
            -> mconcat
                [ "与 "
                , _whom
                , "接壤"
                ]
        MsgIsSubjectOf {scriptMessageWhom = _whom}
            -> mconcat
                [ "是 "
                , _whom
                , "的附属国"
                ]
        MsgLoseCoreCountry {scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "失去该省核心"
                ]
        MsgLoseCoreProvince {scriptMessageWhere = _where}
            -> mconcat
                [ "失去"
                , _where
                , "的核心"
                ]
        MsgRoyalMarriageWith {scriptMessageWhom = _whom}
            -> mconcat
                [ "拥有与"
                , _whom
                , "的王室联姻"
                ]
        MsgOffensiveWarAgainst {scriptMessageWhom = _whom}
            -> mconcat
                [ "正处于攻打"
                , _whom
                , "的战争中"
                ]
        MsgOwnedBy {scriptMessageWhom = _whom}
            -> mconcat
                [ _whom
                , "拥有该省份"
                ]
        MsgReleaseVassal {scriptMessageWhom = _whom}
            -> mconcat
                [ "作为附庸国释放"
                , _whom
                ]
        MsgUnderSiegeBy {scriptMessageWhom = _whom}
            -> mconcat
                [ "省份被"
                , _whom
                , "围攻"
                ]
        MsgCountryIs {scriptMessageWho = _who}
            -> mconcat
                [ "是 "
                , _who
                ]
        MsgTruceWith {scriptMessageWhom = _whom}
            -> mconcat
                [ "拥有与 "
                , _whom
                , "的和约"
                ]
        MsgAtWarWith {scriptMessageWhom = _whom}
            -> mconcat
                [ "处于与 "
                , _whom
                , "的战争中"
                ]
        MsgMakeWhitePeace {scriptMessageWhom = _whom}
            -> mconcat
                [ "签署与 "
                , _whom
                , "的无条件和平和约"
                ]
        MsgCountryExists {scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "存在"
                ]
        MsgExists {scriptMessageYn = _yn}
            -> toMessage (ifThenElseT _yn "Exists" "Does ''not'' exist")
        MsgSameReligion {scriptMessageWhom = _whom}
            -> mconcat
                [ "宗教与"
                , _whom
                , "相同"
                ]
        MsgReligion {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "宗教是 "
                , _icon
                , " "
                , _what
                ]
        MsgSameReligionGroup {scriptMessageWhom = _whom}
            -> mconcat
                [ "所属宗教组与"
                , _whom
                , "相同"
                ]
        MsgReligionGroup {scriptMessage_ = __, scriptMessageWhat = _what}
            -> mconcat
                [ "宗教属于"
                , _what
                , "组"
                ]
        MsgChangeSameReligion {scriptMessageWhom = _whom}
            -> mconcat
                [ "转变为"
                , _whom
                , "的宗教"
                ]
        MsgChangeReligion {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "改变宗教为 "
                , _icon
                , " "
                , _what
                ]
        MsgIsCoreOf {scriptMessageWhom = _whom}
            -> mconcat
                [ "是"
                , _whom
                , "的核心"
                ]
        MsgHasCoreOn {scriptMessageWhat = _what}
            -> mconcat
                [ "拥有"
                , _what
                , "的核心"
                ]
        MsgHasClaim {scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "拥有该省宣称"
                ]
        MsgHasClaimOn {scriptMessageWhat = _what}
            -> mconcat
                [ "拥有"
                , _what
                , "的宣称"
                ]
        MsgIsAIControlled {scriptMessageYn = _yn}
            -> mconcat
                [ "由"
                , toMessage (ifThenElseT _yn "AI" "玩家")
                , "控制"
                ]
        MsgHasCardinal {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "主教"
                ]
        MsgHasHeir {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "继承人"
                ]
        MsgHasOwnerCulture {scriptMessageYn = _yn}
            -> mconcat
                [ "拥有与所有者"
                , toMessage (ifThenElseT _yn "相同的文化" "不同的文化")
                ]
        MsgHasOwnerReligion {scriptMessageYn = _yn}
            -> mconcat
                [ "拥有与所有者"
                , toMessage (ifThenElseT _yn "相同的宗教" "不同的宗教")
                ]
        MsgHasPort {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "港口"
                ]
        MsgHasSeatInParliament {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "国会席位"
                ]
        MsgIsInRegency {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "处于" "'''未处于'''")
                , "摄政会议中"
                ]
        MsgUnderSiege {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''未'''")
                , "被围攻"
                ]
        MsgAtWar {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''未'''")
                , "处于战争中"
                ]
        MsgIsCapital {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是该国首都"
                ]
        MsgIsCity {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是城市"
                ]
        MsgIsColony {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是殖民地"
                ]
        MsgIsEmperor {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是神圣罗马帝国皇帝"
                ]
        MsgIsFemale {scriptMessageYn = _yn}
            -> mconcat
                [ "是"
                , toMessage (ifThenElseT _yn "女性" "男性")
                ]
        MsgIsLesserInUnion {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "联合统治中被统治的一方"
                ]
        MsgIsLooted {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "已" "'''未'''")
                , "被劫掠"
                ]
        MsgIsOverseas {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是海外省份"
                ]
        MsgIsPartOfHRE {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是神圣罗马帝国成员"
                ]
        MsgIsCenterOfReformation {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是改革中心"
                ]
        MsgIsSubject {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是附属国"
                ]
        MsgPapacyIsActive {scriptMessageYn = _yn}
            -> mconcat
                [ "教宗互动"
                , toMessage (ifThenElseT _yn "" "'''不'''")
                , "可用"
                ]
        MsgHasBeenPlayer {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''从未'''")
                , "被玩家控制过"
                ]
        MsgGainCB {scriptMessageCbtype = _cbtype, scriptMessageWhom = _whom}
            -> mconcat
                [ "获得对"
                , _whom
                , "的宣战理由"
                , _cbtype
                ]
        MsgGainCBDuration {scriptMessageCbtype = _cbtype, scriptMessageWhom = _whom, scriptMessageMonths = _months}
            -> mconcat
                [ "获得对"
                , _whom
                , "的宣战理由 "
                , _cbtype
                , " "
                , toMessage (roundNum _months)
                , " 个月"
                ]
        MsgReverseGainCB {scriptMessageCbtype = _cbtype, scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "获得对该国的宣战理由"
                , _cbtype
                ]
        MsgReverseGainCBDuration {scriptMessageCbtype = _cbtype, scriptMessageWho = _who, scriptMessageMonths = _months}
            -> mconcat
                [ _who
                , "获得对该国的宣战理由 "
                , _cbtype
                , toMessage (roundNum _months)
                , " 个月"
                ]
        MsgFactionGainInfluence {scriptMessageIcon = _icon, scriptMessageWhom = _whom, scriptMessageAmt = _amt}
            -> mconcat
                [ _whom
                , "派系"
                , gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (plainNum _amt)
                , " 影响力"
                ]
        MsgFactionInPower {scriptMessageIcon = _icon, scriptMessageWhom = _whom}
            -> mconcat
                [ _icon
                , " "
                , _whom
                , "掌权"
                ]
        MsgHasFactions {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "派系"
                ]
        MsgHasBuilding {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "拥有"
                , _icon
                , " "
                , _what
                ]
        MsgIndefinitely
            -> "indefinitely"
        MsgForDays {scriptMessageDays = _days}
            -> mconcat
                [ toMessage (roundNum _days)
                , "天"
                ]
        MsgEstateLoyalty {scriptMessageIcon = _icon, scriptMessageWho = _who, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , _who
                , " 至少拥有 "
                , toMessage (plainNum _amt)
                , " 忠诚度"
                ]
        MsgEstateInfluence {scriptMessageIcon = _icon, scriptMessageWho = _who, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , _who
                , " 至少拥有 "
                , toMessage (plainNum _amt)
                , " 影响力"
                ]
        MsgAddEstateLoyalty {scriptMessageIcon = _icon, scriptMessageWho = _who, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , _who
                , "阶层"
                , gainsOrLoses _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 忠诚度"
                ]
        MsgAddEstateInfluence {scriptMessageIcon = _icon, scriptMessageWho = _who, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , _who
                , "阶层"
                , gainsOrLoses _amt
                , " "
                , toMessage (plainNum _amt)
                , " 影响力"
                ]
        MsgEstateLoyaltyModifier {scriptMessageIcon = _icon, scriptMessageWho = _who, scriptMessageWhat = _what, scriptMessageAmt = _amt, scriptMessageDur = _dur}
            -> mconcat
                [ _icon
                , " "
                , _who
                , "阶层获得忠诚度修正 "
                , toMessage (iquotes _what)
                , " ("
                , toMessage (colourNum True _amt)
                , " 忠诚度 "
                , _dur
                ]
        MsgEstateInfluenceModifier {scriptMessageIcon = _icon, scriptMessageWho = _who, scriptMessageWhat = _what, scriptMessageAmt = _amt, scriptMessageDur = _dur}
            -> mconcat
                [ _icon
                , " "
                , _who
                , "阶层获得影响力修正 "
                , toMessage (iquotes _what)
                , " ("
                , toMessage (colourNum True _amt)
                , " 影响力) "
                , _dur
                ]
        MsgAddOpinion {scriptMessageModid = _modid, scriptMessageWhat = _what, scriptMessageWhom = _whom}
            -> mconcat
                [ "获得对 "
                , " <!-- "
                , _modid
                , " -->"
                , _whom
                , "的观点修正"
                , toMessage (iquotes _what)
                ]
        MsgReverseAddOpinion {scriptMessageModid = _modid, scriptMessageWhat = _what, scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "获得对该国的观点修正"
                , " <!-- "
                , _modid
                , " -->"
                , toMessage (iquotes _what)
                ]
        MsgAddOpinionDur {scriptMessageModid = _modid, scriptMessageWhat = _what, scriptMessageWhom = _whom, scriptMessageYears = _years}
            -> mconcat
                [ "获得对"
                , " <!-- "
                , _modid
                , " -->"
                , _whom
                , "的观点修正"
                , toMessage (iquotes _what)
                , toMessage (plainNum _years)
                , " 年"
                ]
        MsgReverseAddOpinionDur {scriptMessageModid = _modid, scriptMessageWhat = _what, scriptMessageWho = _who, scriptMessageYears = _years}
            -> mconcat
                [ _who
                , "获得对该国的观点修正"
                , " <!-- "
                , _modid
                , " -->"
                , toMessage (iquotes _what)
                , toMessage (plainNum _years)
                , " 年"
                ]
        MsgHasOpinionMod {scriptMessageModid = _modid, scriptMessageWhat = _what, scriptMessageWhom = _whom}
            -> mconcat
                [ "拥有对"
                , " <!-- "
                , _modid
                , " -->"
                , _whom
                , "的观点修正"
                , toMessage (iquotes _what)
                ]
        MsgRemoveOpinionMod {scriptMessageModid = _modid, scriptMessageWhat = _what, scriptMessageWhom = _whom}
            -> mconcat
                [ "失去对"
                , " <!-- "
                , _modid
                , " -->"
                , _whom
                , "的观点修正"
                , toMessage (iquotes _what)
                ]
        MsgAddTreasury {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 金币"
                ]
        MsgAddYearsOfIncome {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , "等同于"
                , toMessage (colourNum True _amt)
                , "年收入的 "
                , _icon
                , " 金币"
                ]
        MsgNewHeir
            -> "获得新的继承人"
        MsgNewHeirClaim {scriptMessageClaim = _claim}
            -> mconcat
                [ "获得"
                , toMessage (plainNum _claim)
                , "正统性的新继承人"
                ]
        MsgNewHeirDynasty {scriptMessageFlag = _flag}
            -> mconcat
                [ "获得与 "
                , _flag
                , "同一王朝的新继承人"
                ]
        MsgNewHeirDynastyClaim {scriptMessageFlag = _flag, scriptMessageClaim = _claim}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _claim)
                , "正统性的新继承人"
                ]
        MsgNewHeirAge {scriptMessageAge = _age}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _age)
                , "岁的新继承人"
                ]
        MsgNewHeirAgeClaim {scriptMessageAge = _age, scriptMessageClaim = _claim}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _age)
                , "岁且拥有"
                , toMessage (roundNum _claim)
                , "正统性的新继承人"
                ]
        MsgNewHeirAgeFlag {scriptMessageAge = _age, scriptMessageFlag = _flag}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _age)
                , "岁且与"
                , _flag
                , "同一王朝的新继承人"
                ]
        MsgNewHeirAgeFlagClaim {scriptMessageAge = _age, scriptMessageFlag = _flag, scriptMessageClaim = _claim}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _age)
                , "岁且与"
                , _flag
                , "同一王朝并拥有"
                , toMessage (roundNum _claim)
                , "正统性的新继承人"
                ]
        MsgBuildToForcelimitLand {scriptMessageIcon = _inficon, scriptMessageInfantry = _infantry, scriptMessageCavicon = _cavicon, scriptMessageCavalry = _cavalry, scriptMessageArticon = _articon, scriptMessageArtillery = _artillery}
            -> mconcat
                [ "建造陆军单位至部队上限："
                , _inficon
                , " "
                , toMessage (reducedNum plainPc _infantry)
                , "步兵、"
                , _cavicon
                , " "
                , toMessage (reducedNum plainPc _cavalry)
                , "骑兵、"
                , _articon
                , " "
                , toMessage (reducedNum plainPc _artillery)
                , "炮兵"
                ]
        MsgBuildToForcelimitNavy {scriptMessageHeavyicon = _heavyicon, scriptMessageHeavy = _heavy, scriptMessageLighticon = _lighticon, scriptMessageLight = _light, scriptMessageGallicon = _gallicon, scriptMessageGalley = _galley, scriptMessageTranspicon = _transpicon, scriptMessageTransport = _transport}
            -> mconcat
                [ "建造海军单位至部队上限："
                , _heavyicon
                , " "
                , toMessage (reducedNum plainPc _heavy)
                , "重型船、"
                , _lighticon
                , " "
                , toMessage (reducedNum plainPc _light)
                , "轻型船、"
                , _gallicon
                , " "
                , toMessage (reducedNum plainPc _galley)
                , "桨帆船、"
                , _transpicon
                , " "
                , toMessage (reducedNum plainPc _transport)
                , "运输船"
                ]
        MsgProvinceEvent
            -> "省份事件"
        MsgCountryEvent
            -> "国家事件"
        MsgTriggerEvent {scriptMessageEvttype = _evttype, scriptMessageEvtid = _evtid, scriptMessageName = _name}
            -> mconcat
                [ "触发"
                , _evttype
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _evtid
                , " -->"
                ]
        MsgTriggerEventDays {scriptMessageEvttype = _evttype, scriptMessageEvtid = _evtid, scriptMessageName = _name, scriptMessageDays = _days}
            -> mconcat
                [ "触发"
                , _evttype
                , " "
                , toMessage (iquotes _name)
                , " <!-- "
                , _evtid
                , " --> 于"
                , toMessage (roundNum _days)
                , "天内"
                ]
        MsgDeclareWarWithCB {scriptMessageWhom = _whom, scriptMessageCb = _cbtype}
            -> mconcat
                [ "使用宣战理由"
                , _cbtype
                , "向"
                , _whom
                , "宣战"
                ]
        MsgGainAdvisor {scriptMessageSkill = _skill}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _skill)
                , "级顾问"
                ]
        MsgGainAdvisorDiscount {scriptMessageSkill = _skill}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _skill)
                , "级顾问（优惠50%）"
                ]
        MsgGainAdvisorLoc {scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "的"
                , toMessage (roundNum _skill)
                , "级顾问"
                ]
        MsgGainAdvisorLocDiscount {scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "的"
                , toMessage (roundNum _skill)
                , "级顾问（优惠50%）"
                ]
        MsgGainAdvisorName {scriptMessageName = _name, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级顾问"
                ]
        MsgGainAdvisorNameDiscount {scriptMessageName = _name, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级顾问（优惠50%）"
                ]
        MsgGainAdvisorNameLoc {scriptMessageName = _name, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级顾问"
                ]
        MsgGainAdvisorNameLocDiscount {scriptMessageName = _name, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级顾问（优惠50%）"
                ]
        MsgGainAdvisorType {scriptMessageAdvtype = _advtype, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _skill)
                , "级的"
                , _advtype
                ]
        MsgGainAdvisorTypeDiscount {scriptMessageAdvtype = _advtype, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _skill)
                , "级的"
                , _advtype
                , "（优惠50%）"
                ]
        MsgGainAdvisorTypeLoc {scriptMessageAdvtype = _advtype, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , _advtype
                ]
        MsgGainAdvisorTypeLocDiscount {scriptMessageAdvtype = _advtype, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , _advtype
                , "（优惠50%）"
                ]
        MsgGainAdvisorTypeName {scriptMessageAdvtype = _advtype, scriptMessageName = _name, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , _advtype
                ]
        MsgGainAdvisorTypeNameDiscount {scriptMessageAdvtype = _advtype, scriptMessageName = _name, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , _advtype
                , "（优惠50%）"
                ]
        MsgGainAdvisorTypeNameLoc {scriptMessageAdvtype = _advtype, scriptMessageName = _name, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , _advtype
                ]
        MsgGainAdvisorTypeNameLocDiscount {scriptMessageAdvtype = _advtype, scriptMessageName = _name, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , _advtype
                , "（优惠50%）"
                ]
        MsgGainFemaleAdvisor {scriptMessageFemale = _female, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _skill)
                , "级的"
                , toMessage (ifThenElseT _female "女性" "男性")
                , "顾问"
                ]
        MsgGainFemaleAdvisorDiscount {scriptMessageFemale = _female, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _skill)
                , "级的"
                , toMessage (ifThenElseT _female "女性" "男性")
                , "顾问（优惠50%）"
                ]
        MsgGainFemaleAdvisorLoc {scriptMessageFemale = _female, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , "顾问"
                ]
        MsgGainFemaleAdvisorLocDiscount {scriptMessageFemale = _female, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , "顾问（优惠50%）"
                ]
        MsgGainFemaleAdvisorName {scriptMessageFemale = _female, scriptMessageName = _name, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , "顾问"
                ]
        MsgGainFemaleAdvisorNameDiscount {scriptMessageFemale = _female, scriptMessageName = _name, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , "顾问（优惠50%）"
                ]
        MsgGainFemaleAdvisorNameLoc {scriptMessageFemale = _female, scriptMessageName = _name, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , "顾问"
                ]
        MsgGainFemaleAdvisorNameLocDiscount {scriptMessageFemale = _female, scriptMessageName = _name, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , "顾问（优惠50%）"
                ]
        MsgGainFemaleAdvisorType {scriptMessageFemale = _female, scriptMessageAdvtype = _advtype, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , _advtype
                ]
        MsgGainFemaleAdvisorTypeDiscount {scriptMessageFemale = _female, scriptMessageAdvtype = _advtype, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , _advtype
                , "（优惠50%）"
                ]
        MsgGainFemaleAdvisorTypeLoc {scriptMessageFemale = _female, scriptMessageAdvtype = _advtype, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , _advtype
                ]
        MsgGainFemaleAdvisorTypeLocDiscount {scriptMessageFemale = _female, scriptMessageAdvtype = _advtype, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自"
                , _where
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , _advtype
                , "（优惠50%）"
                ]
        MsgGainFemaleAdvisorTypeName {scriptMessageFemale = _female, scriptMessageAdvtype = _advtype, scriptMessageName = _name, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , _advtype
                ]
        MsgGainFemaleAdvisorTypeNameDiscount {scriptMessageFemale = _female, scriptMessageAdvtype = _advtype, scriptMessageName = _name, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , _advtype
                , "（优惠50%）"
                ]
        MsgGainFemaleAdvisorTypeNameLoc {scriptMessageFemale = _female, scriptMessageAdvtype = _advtype, scriptMessageName = _name, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自Gain skill "
                , _where
                , "名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , _advtype
                ]
        MsgGainFemaleAdvisorTypeNameLocDiscount {scriptMessageFemale = _female, scriptMessageAdvtype = _advtype, scriptMessageName = _name, scriptMessageWhere = _where, scriptMessageSkill = _skill}
            -> mconcat
                [ "获得来自Gain skill "
                , _where
                , "名为"
                , _name
                , "的"
                , toMessage (roundNum _skill)
                , "级"
                , toMessage (ifThenElseT _female "女性" "男性")
                , _advtype
                , "（优惠50%）"
                ]
        MsgRebelLeaderRuler
            -> "叛军将领成为该国的新君主"
        MsgNewRuler {scriptMessageRegent = _regent}
            -> mconcat
                [ "新的"
                , toMessage (ifThenElseT _regent "摄政会议" "君主")
                , "掌权了"
                ]
        MsgNewRulerLeader {scriptMessageRegent = _regent, scriptMessageName = _name}
            -> mconcat
                [ "名为"
                , _name
                , "的将领成为了"
                , toMessage (ifThenElseT _regent "摄政会议" "君主")
                ]
        MsgNewRulerAttribs {scriptMessageRegent = _regent}
            -> mconcat
                [ "新的"
                , toMessage (ifThenElseT _regent "摄政会议" "君主")
                , "掌权并拥有以下君主能力："
                ]
        MsgNewRulerLeaderAttribs {scriptMessageRegent = _regent, scriptMessageName = _name}
            -> mconcat
                [ "名为"
                , _name
                , "的将领成为了"
                , toMessage (ifThenElseT _regent "摄政会议" "君主")
                , "并拥有以下君主能力："
                ]
        MsgLeaderRuler {scriptMessageRegent = _regent, scriptMessageName = _name}
            -> mconcat
                [ "名为"
                , _name
                , "的将领作为"
                , toMessage (ifThenElseT _regent "摄政会议" "君主")
                , "掌权了"
                ]
        MsgNewRulerName {scriptMessageName = _name}
            -> mconcat
                [ "名为"
                , _name
                ]
        MsgNewRulerDynasty {scriptMessageName = _name}
            -> mconcat
                [ "属"
                , _name
                , "王朝"
                ]
        MsgNewRulerAge {scriptMessageAmt = _amt}
            -> mconcat
                [ "时龄"
                , toMessage (roundNum _amt)
                , "岁"
                ]
        MsgNewRulerAdm {scriptMessageFixed = _fixed, scriptMessageAmt = _amt}
            -> mconcat
                [ toMessage (ifThenElseT _fixed "固定" "")
                , "{{icon|adm}} "
                , toMessage (roundNum _amt)
                , " 行政技能"
                ]
        MsgNewRulerDip {scriptMessageFixed = _fixed, scriptMessageAmt = _amt}
            -> mconcat
                [ toMessage (ifThenElseT _fixed "固定" "")
                , "{{icon|dip}} "
                , toMessage (roundNum _amt)
                , " 外交技能"
                ]
        MsgNewRulerMil {scriptMessageFixed = _fixed, scriptMessageAmt = _amt}
            -> mconcat
                [ toMessage (ifThenElseT _fixed "固定" "")
                , "{{icon|mil}} "
                , toMessage (roundNum _amt)
                , " 军事技能"
                ]
        MsgNewRulerClaim {scriptMessageAmt = _amt}
            -> mconcat
                [ "正统性 "
                , toMessage (roundNum _amt)
                ]
        MsgNewRulerFixed {scriptMessageAdm = _adm, scriptMessageDip = _dip, scriptMessageMil = _mil}
            -> mconcat
                [ "一个拥有固定技能的君主掌权并拥有 {{icon|adm}} "
                , toMessage (roundNum _adm)
                , ", {{icon|dip}} "
                , toMessage (roundNum _dip)
                , ", {{icon|mil}} "
                , toMessage (roundNum _mil)
                ]
        MsgEstateHasInfluenceModifier {scriptMessageIcon = _icon, scriptMessageEstate = _estate, scriptMessageModifier = _modifier}
            -> mconcat
                [ _icon
                , " "
                , _estate
                , "阶层拥有影响力修正 "
                , toMessage (iquotes _modifier)
                ]
        MsgTriggerSwitch
            -> "The first of the following that is true:"
        MsgTriggerSwitchClause {scriptMessageCond = _cond}
            -> mconcat
                [ "若"
                , _cond
                , "："
                ]
        MsgProvinceHasRebels {scriptMessageIcon = _icon, scriptMessageRtype = _rtype}
            -> mconcat
                [ "省份最有可能的叛军类型是"
                , _icon
                , " "
                , _rtype
                ]
        MsgRebelsFriendlyTo {scriptMessageFriend = _friend}
            -> mconcat
                [ "对"
                , _friend
                , "态度友好"
                ]
        MsgRebelsLedBy {scriptMessageLeader = _leader}
            -> mconcat
                [ "由"
                , _leader
                , "主导"
                ]
        MsgRebelsGainProgress {scriptMessageAmt = _amt}
            -> mconcat
                [ "下一次叛乱获得 "
                , toMessage (roundNum _amt)
                , " 进度"
                ]
        MsgSpawnRebels {scriptMessageRtype = _rtype, scriptMessageSize = _size, scriptMessageFriend = _friend, scriptMessageLeader = _leader, scriptMessageWin = _win, scriptMessageProgress = _progress}
            -> mconcat
                [ _rtype
                , "（"
                , toMessage (roundNum _size)
                , "规模）"
                , _friend
                , "的叛乱爆发"
                , _leader
                , toMessage (ifThenElseT _win "并占领省份" "")
                , _progress
                ]
        MsgRebelsHaveRisen {scriptMessageIcon = _icon, scriptMessageRtype = _rtype}
            -> mconcat
                [ _icon
                , " "
                , _rtype
                , "爆发叛乱"
                ]
        MsgTagGainsCore {scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "获得了该省核心"
                ]
        MsgGainCoreOnProvince {scriptMessageProv = _prov}
            -> mconcat
                [ "获得"
                , _prov
                , "的核心"
                ]
        MsgHasDLC {scriptMessageIcon = _icon, scriptMessageDlc = _dlc}
            -> mconcat
                [ "DLC"
                , " "
                , _icon
                , " "
                , _dlc
                , "已激活"
                ]
        MsgProvince {scriptMessageWhere = _where}
            -> mconcat
                [ "省份"
                , _where
                , "："
                ]
        MsgTechGroup {scriptMessageIcon = _icon, scriptMessageName = _name}
            -> mconcat
                [ "科技组是"
                , " "
                , _icon
                , " "
                , _name
                ]
        MsgNumOfReligion {scriptMessageIcon = _icon, scriptMessageName = _name, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , toMessage (roundNum _amt)
                , " "
                , "个省份信仰"
                , " "
                , _icon
                , " "
                , _name
                ]
        MsgIsStrongestTradePower {scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "是该贸易节点最强贸易力量"
                ]
        MsgAreaIs {scriptMessageWhat = _what}
            -> mconcat
                [ "位于"
                , _what
                , "地区"
                ]
        MsgDominantReligion {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "该国主流宗教为"
                , _icon
                , " "
                , _what
                ]
        MsgHREReligion {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "神圣罗马帝国的官方宗教为"
                , _icon
                , " "
                , _what
                ]
        MsgSetHREReligionLocked {scriptMessageYn = _yn}
            -> mconcat
                [ "神圣罗马帝国的官方宗教"
                , toMessage (ifThenElseT _yn "已经固定" "不再固定")
                ]
        MsgSetHREReligion {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "神圣罗马帝国的官方宗教变为 "
                , _icon
                , " "
                , _what
                ]
        MsgSetHREHereticReligion {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ _icon
                , " "
                , _what
                , "被神圣罗马帝国视为异端"
                ]
        MsgSignWestphalia
            -> "从现在起，信仰任何基督教派的 {{icon|imperial authority}} 神圣罗马帝国皇帝、选帝侯及诸侯们都不再互相视为异端。"
        MsgHRELeaguesEnabled {scriptMessageYn = _yn}
            -> mconcat
                [ "神圣罗马帝国的宗教联盟"
                , toMessage (ifThenElseT _yn "开始" "'''尚未'''")
                , "形成"
                ]
        MsgHREReligionLocked {scriptMessageYn = _yn}
            -> mconcat
                [ "神圣罗马帝国的官方宗教"
                , toMessage (ifThenElseT _yn "已经" "'''尚未'''")
                , "固定"
                ]
        MsgHREWestphalia {scriptMessageYn = _yn}
            -> mconcat
                [ "威斯特伐利亚和约"
                , toMessage (ifThenElseT _yn "已经" "'''尚未'''")
                , "签署"
                ]
        MsgIsElector {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是神圣罗马帝国的选帝侯"
                ]
        MsgNoHREReforms
            -> "No reforms have been passed in the Holy Roman Empire"
        MsgHREPassedReform {scriptMessageWhat = _what}
            -> mconcat
                [ "帝国改革'''"
                , _what
                , "'''已通过"
                ]
        MsgEnableHRELeagues
            -> "神圣罗马帝国的宗教联盟开始形成。"
        MsgIsInLeagueWar {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" " '''未'''")
                , "参与宗教联盟战战争"
                ]
        MsgIsLeagueEnemy {scriptMessageWhom = _whom}
            -> mconcat
                [ "在于 "
                , _whom
                , "对立的宗教联盟中"
                ]
        MsgReligionYears {scriptMessageIcon = _icon, scriptMessageName = _name, scriptMessageYears = _years}
            -> mconcat
                [ _icon
                , " "
                , _name
                , "至少存在"
                , toMessage (plainNum _years)
                , "年了"
                ]
        MsgHasIdea {scriptMessageWhat = _what}
            -> mconcat
                [ "拥有"
                , toMessage (iquotes _what)
                , "理念"
                ]
        MsgReligionProvinces {scriptMessageIcon = _icon, scriptMessageName = _name, scriptMessageAmt = _amt}
            -> mconcat
                [ "国家至少拥有"
                , toMessage (roundNum _amt)
                , "个省份信仰"
                , " "
                , _icon
                , " "
                , _name
                ]
        MsgGoodsProvinces {scriptMessageIcon = _icon, scriptMessageName = _name, scriptMessageAmt = _amt}
            -> mconcat
                [ "国家至少拥有"
                , toMessage (roundNum _amt)
                , "个省份生产"
                , " "
                , _icon
                , " "
                , _name
                ]
        MsgHasAristocraticIdea {scriptMessageName = _name, scriptMessageNum = _num}
            -> mconcat
                [ "拥有 {{icon|aristocratic}} 贵族理念 "
                , toMessage (show _num)
                , " "
                , toMessage (iquotes _name)
                ]
        MsgHasEconomicIdea {scriptMessageName = _name, scriptMessageNum = _num}
            -> mconcat
                [ "拥有 {{icon|economic}} 经济理念 "
                , toMessage (show _num)
                , " "
                , toMessage (iquotes _name)
                ]
        MsgHasDefensiveIdea {scriptMessageName = _name, scriptMessageNum = _num}
            -> mconcat
                [ "拥有 {{icon|defensive}} 防御理念 "
                , toMessage (show _num)
                , " "
                , toMessage (iquotes _name)
                ]
        MsgHasInnovativeIdea {scriptMessageName = _name, scriptMessageNum = _num}
            -> mconcat
                [ "拥有 {{icon|innovative}} 革新理念 "
                , toMessage (show _num)
                , " "
                , toMessage (iquotes _name)
                ]
        MsgHasOffensiveIdea {scriptMessageName = _name, scriptMessageNum = _num}
            -> mconcat
                [ "Has {{icon|offensive}} 进攻理念 "
                , toMessage (show _num)
                , " "
                , toMessage (iquotes _name)
                ]
        MsgHasMaritimeIdea {scriptMessageName = _name, scriptMessageNum = _num}
            -> mconcat
                [ "拥有 {{icon|maritime}} 航海理念 "
                , toMessage (show _num)
                , " "
                , toMessage (iquotes _name)
                ]
        MsgColonists {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 殖民者"
                ]
        MsgMayExplore
            -> "{{icon|may explore|28px}} Can recruit explorers and conquistadors. Explorers may explore ocean provinces."
        MsgGainColonialRange {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 殖民范围"
                ]
        MsgGlobalSettlers {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 全局移民增长"
                ]
        MsgGlobalTariffs {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 全局关税"
                ]
        MsgNavalForcelimitMod {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 海军部队上限修正"
                ]
        MsgGainOverseasCB
            -> "获得永久的[[宣战理由]]\"海外扩张\"用于与印度、黑非洲、中华及游牧科技组宣战（仅限西欧、东欧及安纳托利亚科技组国家使用）。"
        MsgGainPrimitivesCB
            -> "获得永久的[[宣战理由]]\"殖民扩张\"用于与所有土著宣战。"
        MsgNavyTradition {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 海军传统至少为 "
                , toMessage (plainNum _amt)
                ]
        MsgYearlyNavyTradition {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 年度海军传统"
                ]
        MsgHeavyShipCombatAbility {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 重型船战斗能力"
                ]
        MsgLightShipCombatAbility {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 轻型船战斗能力"
                ]
        MsgGalleyCombatAbility {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 桨帆船战斗能力"
                ]
        MsgGlobalShipRepair {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 船只维修"
                ]
        MsgGlobalShipCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " 船只花费"
                ]
        MsgRegimentCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " 部队花费"
                ]
        MsgNavalLeaderManeuver {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 海军将领机动力"
                ]
        MsgBlockadeEfficiency {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 封锁效率"
                ]
        MsgGainSeaRepair
            -> "Ships repair while in coastal sea provinces."
        MsgPrimitives {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "是" "'''不是'''")
                , "原始部落"
                ]
        MsgGlobalTaxModifier {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 国家税收修正"
                ]
        MsgBuildCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " 建造花费"
                ]
        MsgYearlyInflationReduction {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign False (negate _amt))
                , " 年度通胀降低"
                ]
        MsgInterestPerAnnum {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign False _amt)
                , " 年度利息"
                ]
        MsgGlobalAutonomy {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign False _amt)
                , " 月度自治度变化"
                ]
        MsgLandMaintenanceMod {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " 陆军维护费用修正"
                ]
        MsgNavalMaintenanceMod {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " 海军维护费用修正"
                ]
        MsgProdEff {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 生产效率至少为 "
                , toMessage (reducedNum (colourPcSign True) _amt)
                ]
        MsgProdEffBonus {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 生产效率"
                ]
        MsgDevelCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " {{DLC-only|提升发展度花费}}"
                ]
        MsgGainReligiousCB
            -> "{{icon|cb on religious enemies|28px}} 获得对异教和异端的永久[[宣战理由]]，分别为\"圣战\"和\"清除异端\"。"
        MsgMissionaries {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 传教士"
                ]
        MsgStabilityCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " 稳定度花费修正"
                ]
        MsgMissionaryStrength {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 传教力量"
                ]
        MsgToleranceHeathen {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 异教容忍"
                ]
        MsgToleranceHeretic {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 异端容忍"
                ]
        MsgToleranceTrue {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 正统信仰容忍"
                ]
        MsgYearlyPapalInfluence {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 年度教廷影响"
                ]
        MsgYearlyDevotion {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " {{DLC-only|年度奉献度}}"
                ]
        MsgMonthlyFervor {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " {{DLC-only|狂热}}"
                ]
        MsgChurchPowerModifier {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " {{DLC-only|教会力量}}"
                ]
        MsgPrestige {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 威望至少为 "
                , toMessage (colourNumSign True _amt)
                ]
        MsgYearlyPrestige {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " 年度威望"
                ]
        MsgMissionaryStrengthVsHeretics {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 传教士力量对异端"
                ]
        MsgCultureConvCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Culture conversion cost"
                ]
        MsgHasOpinion {scriptMessageAmt = _amt, scriptMessageWhom = _whom}
            -> mconcat
                [ "对"
                , _whom
                , "的观点至少为 "
                , toMessage (colourNumSign True _amt)
                ]
        MsgNormalOrHistoricalNations {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''未'''")
                , "使用一般或历史国家"
                ]
        MsgIsCustomNation {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "在使用自建国"
                ]
        MsgReligionEnabled {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [  _icon
                , " "
                , _what
                , "已可用"
                ]
        MsgCapitalIs {scriptMessageWhat = _what}
            -> mconcat
                [ "首都是"
                , _what
                ]
        MsgFullIdeaGroup {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "已完成 "
                , _icon
                , " "
                , _what
                ]
        MsgTradeIncomePercentage {scriptMessageAmt = _amt}
            -> mconcat
                [ "Trade accounts for at least "
                , toMessage (reducedNum plainPc _amt)
                , " of national income"
                ]
        MsgReligiousUnity {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " <!-- idea: "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " --> 宗教统一度至少为 "
                , toMessage (reducedNum (colourPc True) _amt)
                ]
        MsgReligiousUnityBonus {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " 宗教统一度"
                ]
        MsgHasADM {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (plainNum _amt)
                , " 行政点数"
                ]
        MsgHasDIP {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (plainNum _amt)
                , " 外交点数"
                ]
        MsgHasMIL {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (plainNum _amt)
                , " 军事点数"
                ]
        MsgRankDuchy
            -> "政府等级至少为 {{icon|duchy}} 公国"
        MsgRankKingdom
            -> "政府等级至少为 {{icon|kingdom}} 王国或 {{icon|empire}} 帝国<!-- 不 {{icon|duchy}} 公国 -->"
        MsgRankEmpire
            -> "政府等级至少为 {{icon|empire}} 帝国<!-- 不是 {{icon|duchy}} 公国或 {{icon|kingdom}} 王国 -->"
        MsgSetRankDuchy
            -> "设置政府等级为 {{icon|duchy}} 公国"
        MsgSetRankKingdom
            -> "设置政府等级为 {{icon|kingdom}} 王国"
        MsgSetRankEmpire
            -> "设置政府等级为 {{icon|empire}} 帝国"
        MsgOverextension {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 过度扩张至少为 "
                , toMessage (reducedNum plainPc _amt)
                ]
        MsgRandomNewWorld {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "在使用随机新世界"
                ]
        MsgIsColonialNation {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是殖民领"
                ]
        MsgIsFormerColonialNation {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是前殖民领国家"
                ]
        MsgIsNomad {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是草原游牧"
                ]
        MsgReligionReformed {scriptMessageYn = _yn}
            -> mconcat
                [ "该国的宗教"
                , toMessage (ifThenElseT _yn "已" "'''尚未'''")
                , "经过改革"
                ]
        MsgChangeTag {scriptMessageWho = _who}
            -> mconcat
                [ "国家成为 "
                , _who
                ]
        MsgSetInEmpire {scriptMessageYn = _yn}
            -> mconcat
                [ "省份"
                , toMessage (ifThenElseT _yn "加入" "离开")
                , "神圣罗马帝国"
                ]
        MsgHasSecondaryReligion {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "兼容宗教"
                ]
        MsgSecondaryReligion {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "兼容宗教是 "
                , _icon
                , " "
                , _what
                ]
        MsgIsDefenderOfFaith {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是信仰守护者"
                ]
        MsgLegitimacyOrHordeUnity {scriptMessageAmt = _amt}
            -> mconcat
                [ "{{icon|legitimacy}} 正统性或 {{icon|horde unity}} 游牧统一度至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgCheckVariable {scriptMessageIcon = __icon, scriptMessageWhat = _what, scriptMessageAmt = _amt}
            -> mconcat
                [ "变量的值 "
                , _what
                , " 至少为 "
                , toMessage (plainNum _amt)
                ]
        MsgChangeTechGroup {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "转变科技组至 "
                , _icon
                , " "
                , _what
                ]
        MsgChangeUnitType {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "转变兵种组至 "
                , _icon
                , " "
                , _what
                ]
        MsgNoBaseWeight
            -> "（没有基础权重？）"
        MsgAIBaseWeight {scriptMessageAmt = _amt}
            -> mconcat
                [ "基础权重："
                , toMessage (plainNum _amt)
                ]
        MsgAIFactorOneline {scriptMessageFactor = _factor, scriptMessageMultiplier = _multiplier}
            -> mconcat
                [ _factor
                , "："
                , toMessage (bold (plainNum _multiplier))
                ]
        MsgAIFactorHeader {scriptMessageMultiplier = _multiplier}
            -> mconcat
                [ toMessage (bold (plainNum _multiplier))
                , "："
                ]
        MsgLucky {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是幸运国"
                ]
        MsgHasAdvisorLevel {scriptMessageIcon = _icon, scriptMessageWhat = _what, scriptMessageLevel = _level}
            -> mconcat
                [ "拥有一名"
                , toMessage (roundNum _level)
                , " "
                , _icon
                , " "
                , _what
                , "顾问"
                ]
        MsgNumRoyalMarriages {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , "桩王室联姻关系"
                ]
        MsgIsBankrupt {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是破产状态"
                ]
        MsgNumColonialSubjects {scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , toMessage (roundNum _amt)
                , " 殖民领（附属国）"
                ]
        MsgTradeEfficiency {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 贸易效率至少为 "
                , toMessage (reducedNum plainPc _amt)
                ]
        MsgTradeEfficiencyBonus {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPc True) _amt)
                , " 贸易效率"
                ]
        MsgHasWarTaxes {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "已" "'''未'''")
                , "提高战争税"
                ]
        MsgRevoltPercentage {scriptMessageAmt = _amt}
            -> mconcat
                [ "至少"
                , toMessage (roundPc _amt)
                , "个省份处于叛乱中"
                ]
        MsgHasAnyDisaster {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "进行中的灾难"
                ]
        MsgHasActivePolicy {scriptMessageWhat = _what}
            -> mconcat
                [ "已制定了"
                , toMessage (iquotes _what)
                , "政策"
                ]
        MsgHasDucats {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (plainNum _amt)
                , " 金币"
                ]
        MsgHasParliament {scriptMessageYn = _yn}
            -> mconcat
                [ "该国"
                , toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "国会"
                ]
        MsgHasTruce {scriptMessageYn = _yn}
            -> mconcat
                [ "该国"
                , toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "与他国的和约"
                ]
        MsgNumRebelControlledProvinces {scriptMessageAmt = _amt}
            -> mconcat
                [ "至少"
                , toMessage (plainNum _amt)
                , "个省份被叛军控制"
                ]
        MsgFortLevel {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 要塞等级至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgHasTradeModifier {scriptMessageIcon = __icon, scriptMessageWho = _who, scriptMessageWhat = _what}
            -> mconcat
                [ _who
                , "拥有贸易修正 "
                , toMessage (iquotes _what)
                ]
        MsgIsMonth {scriptMessageWhat = _what}
            -> mconcat
                [ "月份是"
                , _what
                ]
        MsgIsSea {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是海洋"
                ]
        MsgHeavyShip {scriptMessageWhom = _whom}
            -> mconcat
                [ "建造一只属于"
                , _whom
                , "的 {{icon|heavy ship}} 重型船"
                ]
        MsgLightShip {scriptMessageWhom = _whom}
            -> mconcat
                [ "建造一只属于"
                , _whom
                , "的 {{icon|light ship}} 轻型船"
                ]
        MsgGalley {scriptMessageWhom = _whom}
            -> mconcat
                [ "建造一只属于"
                , _whom
                , "的 {{icon|galley}} 桨帆船"
                ]
        MsgNumColonies {scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少"
                , toMessage (roundNum _amt)
                , "个殖民地"
                ]
        MsgChangeCulture {scriptMessageWhat = _what}
            -> mconcat
                [ "转变文化为"
                , _what
                ]
        MsgNavalForcelimit {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 海军部队上限至少为 "
                , toMessage (plainNum _amt)
                ]
        MsgBlockade {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "至少有 "
                , _icon
                , " "
                , toMessage (plainPc _amt)
                , "处被封锁"
                ]
        MsgCreateAlliance {scriptMessageWhom = _whom}
            -> mconcat
                [ "建立与 "
                , _whom
                , "的军事同盟"
                ]
        MsgAddLocalUnrest {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum False _amt)
                , " 叛乱"
                ]
        MsgGoldIncomePercentage {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "该国收入至少有"
                , toMessage (reducedNum plainPc _amt)
                , "来自 "
                , _icon
                , " 金矿"
                ]
        MsgIsTribal {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "是土著议会"
                ]
        MsgSetCapital {scriptMessageWhat = _what}
            -> mconcat
                [ "迁移首都至"
                , _what
                ]
        MsgChangePrimaryCulture {scriptMessageWhat = _what}
            -> mconcat
                [ "转变主流文化至"
                , _what
                ]
        MsgColonialRegion {scriptMessageWhere = _where}
            -> mconcat
                [ "位于"
                , _where
                , "殖民区域"
                ]
        MsgJuniorUnionWith {scriptMessageWhom = _whom}
            -> mconcat
                [ "是与 "
                , _whom
                , "的联合统治中被统治的一方"
                ]
        MsgSeniorUnionWith {scriptMessageWhom = _whom}
            -> mconcat
                [ "是与 "
                , _whom
                , "的联合统治中统治的一方"
                ]
        MsgVassalOf {scriptMessageWhom = _whom}
            -> mconcat
                [ "是 "
                , _whom
                , "的附庸国"
                ]
        MsgOverlordOf {scriptMessageWhom = _whom}
            -> mconcat
                [ "是 "
                , _whom
                , "的宗主国"
                ]
        MsgChangeProvinceName {scriptMessageWhat = _what}
            -> mconcat
                [ "省份改名为"
                , _what
                ]
        MsgRenameCapital {scriptMessageWhat = _what}
            -> mconcat
                [ "省份首府改名为"
                , _what
                ]
        MsgOwnsOrVassal {scriptMessageWhere = _where}
            -> mconcat
                [ "拥有"
                , _where
                , "或是所有者的宗主国"
                ]
        MsgIsInColonialRange {scriptMessageWhom = _whom}
            -> mconcat
                [ "在"
                , _whom
                , "的殖民范围内"
                ]
        MsgConstructingGreatProject {scriptMessageWhat = _what}
            -> mconcat
                [ "正在建造"
                , _what
                ]
        MsgConstructing {scriptMessageWhat = _what}
            -> mconcat
                [ "正在建造"
                , _what
                ]
        MsgStartConstructingGreatProject {scriptMessageWhat = _what}
            -> mconcat
                [ "开始建造"
                , _what
                ]
        MsgCancelConstruction
            -> "取消建造"
        MsgYearsOfIncome {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "国库至少拥有 "
                , _icon
                , " "
                , toMessage (plainNum _amt)
                , "年的收入"
                ]
        MsgLibertyDesire {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 独立倾向至少为 "
                , toMessage (colourPc False _amt)
                ]
        MsgGainLibertyDesire {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "获得 "
                , _icon
                , " "
                , toMessage (colourPc False _amt)
                , " 独立倾向"
                ]
        MsgColonialParent
            -> "该国的殖民母国："
        MsgAlways {scriptMessageYn = _yn}
            -> toMessage (ifThenElseT _yn "{{icon|yes}} 总是" "{{icon|no}} 从未")
        MsgCapitalCultureDominant
            -> "首都的 {{icon|culture}} 文化是该国主流的文化"
        MsgNumUnions {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , "个联合统治"
                ]
        MsgNumVassals {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "拥有至少 "
                , _icon
                , " "
                , toMessage (roundNum _amt)
                , "个附庸国"
                ]
        MsgFreeVassal {scriptMessageWhom = _whom}
            -> mconcat
                [ "作为独立国家释放附庸国 "
                , _whom
                ]
        MsgHasMissionary {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "一名可用的传教士"
                ]
        MsgNavyPercentage {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ "至少拥有 "
                , _icon
                , " 部队上限"
                , toMessage (plainPc _amt)
                , "的海军"
                ]
        MsgWasForceConverted {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "曾" "'''未'''")
                , "被强制转换宗教"
                ]
        MsgFemaleEmperorAllowed {scriptMessageYn = _yn}
            -> mconcat
                [ "皇帝"
                , toMessage (ifThenElseT _yn "" " '''不'''")
                , "可以是女性"
                ]
        MsgImperialAuthority {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 帝国权威至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgHasFemaleHeir {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "拥有" "'''没有'''")
                , "女性继承人"
                ]
        MsgPiety {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 虔诚至少为 "
                , toMessage (reducedNum (colourPcSign True) _amt)
                ]
        MsgIsInTutorial {scriptMessageYn = _yn}
            -> mconcat
                [ toMessage (ifThenElseT _yn "" "'''不'''")
                , "在教程中"
                ]
        MsgGainFervor {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 狂热"
                ]
        MsgGainChurchPower {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 教会力量"
                ]
        MsgIncomeFromVassals {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Income from vassals"
                ]
        MsgTimeToFabricateClaims {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Time to fabricate claims"
                ]
        MsgDiploAnnexCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Diplomatic annexation cost"
                ]
        MsgAEImpact {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Aggressive expansion impact"
                ]
        MsgDiploRep {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Diplomatic reputation"
                ]
        MsgEnvoyTravelTime {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Envoy travel time"
                ]
        MsgDiploRelations {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Diplomatic relations"
                ]
        MsgVassalForcelimitContribution {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Vassal force limit contribution"
                ]
        MsgUnjustifiedDemands {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Unjustified demands"
                ]
        MsgInfantryCombatAbility {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Infantry combat ability"
                ]
        MsgCavalryCombatAbility {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Cavalry combat ability"
                ]
        MsgArtilleryCombatAbility {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Artillery combat ability"
                ]
        MsgShipDurability {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Ship durability"
                ]
        MsgMoraleOfArmies {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " Morale of armies"
                ]
        MsgMoraleOfNavies {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " Morale of navies"
                ]
        MsgNavalAttrition {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Naval attrition"
                ]
        MsgDiscipline {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Discipline"
                ]
        MsgNationalManpowerMod {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " National manpower modifier"
                ]
        MsgManpowerRecoverySpeed {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " Manpower recovery speed"
                ]
        MsgAvailableMercs {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Available mercenaries"
                ]
        MsgGarrisonSize {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Garrison size"
                ]
        MsgLandAttrition {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Land attrition"
                ]
        MsgLandForcelimitMod {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Land force limit modifier"
                ]
        MsgPrestigeDecay {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Prestige decay"
                ]
        MsgMercCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Mercenary cost"
                ]
        MsgTechCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Technology cost"
                ]
        MsgPossibleAdvisors {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " Possible advisors"
                ]
        MsgReduceInflationCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Reduce inflation cost"
                ]
        MsgLeadersWithoutUpkeep {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " Leader(s)<!-- sic --> without upkeep"
                ]
        MsgAdvisorCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Advisor costs"
                ]
        MsgCoreCreationCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Core creation cost"
                ]
        MsgMercMaintenance {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Mercenary maintenance modifier"
                ]
        MsgADMTechCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Administrative technology cost"
                ]
        MsgDIPTechCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Diplomatic technology cost"
                ]
        MsgGoodsProducedMod {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Goods produced modifier"
                ]
        MsgNavalLeaderFire {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " Naval leader fire"
                ]
        MsgNavalLeaderShock {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " Naval leader shock"
                ]
        MsgPrestigeFromLand {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Prestige from land battles"
                ]
        MsgPrestigeFromNaval {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Prestige from naval battles"
                ]
        MsgDiplomats {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Diplomats"
                ]
        MsgWarExhaustionCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Cost of reducing war exhaustion"
                ]
        MsgImproveRelations {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Improve relations"
                ]
        MsgProvinceWarscoreCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Province warscore cost"
                ]
        MsgReducedStabImpacts
            -> "Lowered impact on stability from diplomatic actions"
        MsgNationalUnrest {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign False _amt)
                , " National unrest"
                ]
        MsgYearsOfSeparatism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign False _amt)
                , " Years of separatism"
                ]
        MsgAccCultureThreshold {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Accepted culture threshold"
                ]
        MsgBetterRelationsOverTime {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Better relations over time"
                ]
        MsgIdeaCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Idea cost"
                ]
        MsgMerchants {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Merchants"
                ]
        MsgRecruitmentTime {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Recruitment time"
                ]
        MsgShipbuildingTime {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Shipbuilding time"
                ]
        MsgGlobalTradePower {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Global trade power"
                ]
        MsgEmbargoEff {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Embargo efficiency"
                ]
        MsgPrivateerEff {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Privateer efficiency"
                ]
        MsgGlobalSpyDefence {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " National spy defence"
                ]
        MsgMaySabotageReputation
            -> "{{icon|may sabotage reputation|28px}} May [[sabotage reputation]]"
        MsgSpyOffense {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Spy offense"
                ]
        MsgCovertActionRelationImpact {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Covert action relation impact"
                ]
        MsgMayStudyTech
            -> "{{icon|may study technology|28px}} May [[study technology]]"
        MsgMaySowDiscontent
            -> "{{icon|may sow discontent|28px}} May [[sow discontent]]"
        MsgMayAgitateForLiberty
            -> "May [[agitate for liberty]]"
        MsgMayInfiltrateAdministration
            -> "{{icon|may infiltrate administration|28px}} May [[infiltrate administration]]"
        MsgRebelSupportEff {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Rebel support efficiency"
                ]
        MsgArmyTraditionDecay {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Army tradition decay"
                ]
        MsgNavyTraditionDecay {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Navy tradition decay"
                ]
        MsgInfantryCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Infantry cost"
                ]
        MsgCavalryCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Cavalry cost"
                ]
        MsgArtilleryCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Artillery cost"
                ]
        MsgMILTechCost {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Military technology cost"
                ]
        MsgHostileCoreCreation {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Hostile core-creation cost on us"
                ]
        MsgCaravanPower {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Caravan power"
                ]
        MsgLandLeaderFire {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Land leader fire"
                ]
        MsgLandLeaderShock {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Land leader shock"
                ]
        MsgLandLeaderManeuver {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Land leader maneuver"
                ]
        MsgLeaderSiege {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Leader siege"
                ]
        MsgFortDefense {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourPcSign True _amt)
                , " Fort defense"
                ]
        MsgFortMaintenance {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign False) _amt)
                , " Fort maintenance"
                ]
        MsgReinforceSpeed {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourPcSign True _amt)
                , " Reinforce speed"
                ]
        MsgAttritionForEnemies {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " Attrition for enemies"
                ]
        MsgSiegeAbility {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Siege ability"
                ]
        MsgRecoverArmyMoraleSpeed {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Recover army morale speed"
                ]
        MsgTradeRange {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Trade range"
                ]
        MsgTradeSteering {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPcSign True) _amt)
                , " Trade steering"
                ]
        MsgTextIs {scriptMessageWhat = _what}
            -> mconcat
                [ "Text is: ''"
                , _what
                , "''"
                ]
        MsgAnyOwnedPlanet
            -> "Any owned planet:"
        MsgAnyOwnedShip
            -> "Any owned ship:"
        MsgAnyPop
            -> "Any pop:"
        MsgEveryOwnedPlanet
            -> "Every owned planet:"
        MsgEveryOwnedPop
            -> "Every pop on owned planets:"
        MsgRandomOwnedShip
            -> "One random owned ship:"
        MsgRandomPop
            -> "One random pop:"
        MsgRandomSystem
            -> "One random system:"
        MsgRandomTile
            -> "One random tile:"
        MsgGainTrait {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "Gain trait "
                , _icon
                , " "
                , _what
                ]
        MsgIsFreeOrTributaryTrigger -> "{{is_free_or_tributary_trigger}}"
        MsgAbsolutism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 专制度至少为 "
                , toMessage (colourNum True _amt)
                ]
        MsgGainAbsolutism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 专制度"
                ]
        MsgMaxAbsolutism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " 最大专制度"
                ]
        MsgYearlyAbsolutism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourNumSign True) _amt)
                , " 年度专制度"
                ]
        MsgCurrentAge {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "正处于 "
                , _icon
                , " "
                , _what
                , "时代"
                ]
        MsgAcceptedCulture {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ _icon
                , " "
                , _what
                , " 是已接受的文化"
                ]
        MsgCalcTrueIf {scriptMessageAmt = _amt}
            -> mconcat
                [ "至少有下述 "
                , toMessage (plainNum _amt)
                , " 项成立："
                ]
        MsgGainConstructionProgress {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 在伟大工程上的进度"
                ]
        MsgGainHarmonizationProgress {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 在和谐上的进度"
                ]
        MsgGainHeirSupport {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 支持我们的继承人"
                ]
        MsgGainYearsOfSeparatism {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum False _amt)
                , " 年的分裂主义"
                ]
        MsgAuth {scriptMessageAmt = _amt}
            -> mconcat
                [ "权威至少为 "
                , toMessage (roundNum _amt)
                ]
        MsgGainColonyPopulation {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 译名人口"
                ]
        MsgGainCorruption {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum False _amt)
                , " 腐败度"
                ]
        MsgGainDevastation {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum False _amt)
                , " 荒废度"
                ]
        MsgGainHarmony {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 和谐值"
                ]
        MsgGainMilitarization {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 军事化程度"
                ]
        MsgGainProsperity {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 繁荣进度"
                ]
        MsgGainSplendor {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 辉煌点数"
                ]
        MsgAddTariffValue {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourPc True _amt)
                , " 关税"
                ]
        MsgGainYearlySailors {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 年增长的水手"
                ]
        MsgAdminEfficiencyBonus {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourPc True _amt)
                , " 行政效率"
                ]
        MsgAdminEfficiency {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 行政效率至少为 "
                , toMessage (plainPc _amt)
                ]
        MsgDisasterMod
            -> "灾难修正"
        MsgAddClaimFor {scriptMessageWho = _who}
            -> mconcat
                [ _who
                , "获得该省宣称"
                ]
        MsgAddClaimOn {scriptMessageWhere = _where}
            -> mconcat
                [ "获得"
                , _where
                , "的宣称"
                ]
        MsgAddAcceptedCulture {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ _icon
                , " 获得"
                , _what
                , "作为可接受的文化"
                ]
        MsgAddBuilding {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "建造 "
                , _icon
                , " "
                , _what
                ]
        MsgAddHarmonizedReligion {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "获得 "
                , _icon
                , " "
                , _what
                , "作为已和谐的宗教"
                ]
        MsgAddHeirPersonality {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "继承人获得特质 "
                , _icon
                , " "
                , _what
                ]
        MsgAddConsortPersonality {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "配偶获得特质 "
                , _icon
                , " "
                , _what
                ]
        MsgAddRulerPersonality {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "继承人获得特质 "
                , _icon
                , " "
                , _what
                ]
        MsgAddCenterOfReformation {scriptMessageIcon = _icon, scriptMessageWhat = _what}
            -> mconcat
                [ "建成一个 "
                , _icon
                , " "
                , _what
                , "改革中心"
                ]
        MsgAddHistoricalRival {scriptMessageWho = _who}
            -> mconcat
                [ "添加 "
                , _who
                , "为历史宿敌"
                ]
        MsgAddTruceWith {scriptMessageWho = _who}
            -> mconcat
                [ "建立与 "
                , _who
                , "的合约"
                ]
        MsgGainSailors {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " 水手"
                ]
        MsgGainSailorsFrac {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " 最大值百分之 "
                , toMessage (reducedNum (colourPc True) _amt)
                , " 的 "
                , _icon
                , " 水手"
                ]
        MsgArmyProfessionalism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 陆军职业度至少为 "
                , toMessage (reducedNum plainPc _amt)
                ]
        MsgArmyProfessionalismAs {scriptMessageIcon = _icon, scriptMessageWhom = _whom}
            -> mconcat
                [ _icon
                , " 陆军职业度至少高于 "
                , _whom
                ]
        MsgGainArmyProfessionalism {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (reducedNum (colourNum True) _amt)
                , " 陆军职业度"
                ]
        MsgSailorsPercentage {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , "水手储备至少为最大值的 "
                , " "
                , toMessage (reducedNum (colourPc True) _amt)
                ]
        MsgNationalSailorsMod {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (reducedNum (colourPc True) _amt)
                , " 全国水手修正"
                ]
        MsgCorruption {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " 通货膨胀至少为 "
                , toMessage (reducedNum plainNum _amt)
                ]
        MsgAddIncidentVariableValue {scriptMessageAmt = _amt}
            -> mconcat
                [ "该国倾向"
                , ifThenElse (_amt < 0) "开放" "孤立主义"
                , " 直至事变结束后 "
                , toMessage (plainNum (abs _amt))
                ]
        MsgAddInstitutionEmbracement {scriptMessageIcon = _icon, scriptMessageWhat = _what, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourPc True _amt)
                , " "
                , _icon
                , " "
                , _what
                , " 思潮上的进度"
                ]
        MsgAddIsolationism {scriptMessageAmt = _amt}
            -> mconcat
                [ "更进"
                , toMessage (plainNum _amt)
                , "步倾向"
                , ifThenElse (_amt < 0) "开放" "孤立主义"
                ]
        MsgGainMandate {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourPc True _amt)
                , " 天命值"
                ]
        MsgAddMandateEffect
            -> "{{add mandate effect}}"
        MsgAddMandateLargeEffect
            -> "{{add mandate effect|large=yes}}"
        MsgAddMeritocracyEffect
            -> "{{add meritocracy effect}}"
        MsgAddMeritocracyLargeEffect
            -> "{{add meritocracy effect|large=yes}}"
        MsgMutualOpinion {scriptMessageModid = _modid, scriptMessageWhat = _what, scriptMessageWhom = _whom}
            -> mconcat
                [ "该国与 "
                , _whom
                , "相互获得观点修正"
                , toMessage (iquotes _what)
                , " <!-- "
                , _modid
                , " -->"
                ]
        MsgMutualOpinionDur {scriptMessageWhat = _what, scriptMessageWhom = _whom, scriptMessageDays = _days}
            -> mconcat
                [ "该国与 "
                , _whom
                , "相互获得观点修正"
                , toMessage (iquotes _what)
                , " "
                , toMessage (plainNum _days)
                , " 天"
                ]
        MsgAddNextInstitutionEmbracement {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 接纳下一个未接纳思潮的进度"
                ]
        MsgAddSpyNetworkFrom {scriptMessageIcon = __icon, scriptMessageWhom = _whom, scriptMessageAmt = _amt}
            -> mconcat
                [ _whom
                , " "
                , gainsOrLoses _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 间谍网力量"
                ]
        MsgAddSpyNetworkIn {scriptMessageIcon = __icon, scriptMessageWhom = _whom, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " 间谍网力量对 "
                , _whom
                ]
        MsgEventTarget {scriptMessageTag = _tag}
            -> mconcat
                [ "事件目标<tt>"
                , _tag
                , "</tt>："
                ]
        MsgEventTargetVar {scriptMessageTag = _tag}
            -> mconcat
                [ "事件目标<tt>"
                , _tag
                , "</tt>"
                ]
        MsgSudebnikProgress {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " Sudebnik progress"
                ]
        MsgOprichninaProgress {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " Oprichnina progress"
                ]
        MsgStreltsyProgress {scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , toMessage (colourNum True _amt)
                , " Streltsy progress"
                ]
        MsgAddLootFromProvinceEffect
            -> "获得 {{icon|ducats}} 金币和 {{icon|mil}} 军事点数在降低省份发展度后"
        MsgAddBurghersLoyalty
            -> "{{add estate loyalty effect|burghers}}"
        MsgAddChurchLoyalty
            -> "{{add estate loyalty effect|clergy}}"
        MsgAddCossacksLoyalty
            -> "{{add estate loyalty effect|cossacks}}"
        MsgAddDhimmiLoyalty
            -> "{{add estate loyalty effect|dhimmi}}"
        MsgAddNoblesLoyalty
            -> "{{add estate loyalty effect|nobility}}"
        MsgReduceBurghersLoyalty
            -> "{{add estate loyalty effect|burghers|reduce}}"
        MsgReduceChurchLoyalty
            -> "{{add estate loyalty effect|clergy|reduce}}"
        MsgReduceCossacksLoyalty
            -> "{{add estate loyalty effect|cossacks|reduce}}"
        MsgReduceDhimmiLoyalty
            -> "{{add estate loyalty effect|dhimmi|reduce}}"
        MsgReduceNoblesLoyalty
            -> "{{add estate loyalty effect|nobility|reduce}}"
        MsgAddStabilityOrAdm
            -> "{{add stability or adm power}}"
        MsgAddTrust {scriptMessageWhom = _whom, scriptMessageAmt = _amt}
            -> mconcat
                [ "获得 "
                , toMessage (colourNum True _amt)
                , " 对 "
                , toMessage _whom
                , "的信任"
                ]
        MsgAddTrustMutual {scriptMessageWhom = _whom, scriptMessageAmt = _amt}
            -> mconcat
                [ "该国和 "
                , toMessage _whom
                , " 相互获得 "
                , toMessage (colourNum True _amt)
                , " 信任"
                ]
        MsgSaveEventTargetAs {scriptMessageName = _name}
            -> mconcat
                [ "保存事件目标名为<tt>"
                , _name
                , "</tt>"
                ]
        MsgHasSavedEventTarget {scriptMessageName = _name}
            -> mconcat
                [ "名为<tt>"
                , _name
                , "</tt>的事件目标已保存"
                ]
        MsgRemoveClaim {scriptMessageWho = _who}
            -> mconcat
                [ _who
                , " loses their claim on this province"
                ]
        MsgTribalAllegianceBonus {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , " "
                , toMessage (colourNumSign True _amt)
                , " {{DLC-only|年度部落忠诚度}}"
                ]
        MsgTribalAllegiance {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ _icon
                , "{{DLC-only|部落忠诚度}}至少为 "
                , toMessage (plainNum _amt)
                ]
        MsgGainTribalAllegiance {scriptMessageIcon = _icon, scriptMessageAmt = _amt}
            -> mconcat
                [ gainOrLose _amt
                , " "
                , _icon
                , " "
                , toMessage (colourNum True _amt)
                , " {{DLC-only|部落忠诚度}}"
                ]
        MsgArmySizePc {scriptMessageAmt = _amt}
            -> mconcat
                [ "陆军规模至少为军队上限的 "
                , toMessage (plainPc _amt)
                ]
        MsgBuildHeavyShips {scriptMessageIcon = _icon, scriptMessageAmt = _amt, scriptMessageSpeed = _speed, scriptMessageCost = _cost}
            -> mconcat
                [ "建造 "
                , _icon
                , " "
                , toMessage (reducedNum plainNum _amt)
                , " 重型船只 "
                , toMessage (plainPc _cost)
                , " 的正常花费，"
                , toMessage (plainPc _speed)
                , " 的正常时间"
                ]
        MsgBuildLightShips {scriptMessageIcon = _icon, scriptMessageAmt = _amt, scriptMessageSpeed = _speed, scriptMessageCost = _cost}
            -> mconcat
                [ "建造 "
                , _icon
                , " "
                , toMessage (reducedNum plainNum _amt)
                , " 轻型船只 "
                , toMessage (plainPc _cost)
                , " 的正常花费，"
                , toMessage (plainPc _speed)
                , " 的正常时间"
                ]
        MsgBuildGalleys {scriptMessageIcon = _icon, scriptMessageAmt = _amt, scriptMessageSpeed = _speed, scriptMessageCost = _cost}
            -> mconcat
                [ "建造 "
                , _icon
                , " "
                , toMessage (reducedNum plainNum _amt)
                , " 将帆船 "
                , toMessage (plainPc _cost)
                , " 的正常花费，"
                , toMessage (plainPc _speed)
                , " 的正常时间"
                ]
        MsgBuildTransports {scriptMessageIcon = _icon, scriptMessageAmt = _amt, scriptMessageSpeed = _speed, scriptMessageCost = _cost}
            -> mconcat
                [ "建造 "
                , _icon
                , " "
                , toMessage (reducedNum plainNum _amt)
                , " 运输船 "
                , toMessage (plainPc _cost)
                , " 的正常花费，"
                , toMessage (plainPc _speed)
                , " 的正常时间"
                ]
    renderMessage _ _ _ = error "Sorry, non-English localisation not yet supported."

-- | Message paired with an indentation level.
type IndentedMessage = (Int, ScriptMessage)
-- | List of messages, paired with their respective indentation levels.
type IndentedMessages = [IndentedMessage]

-- | Convenience synonym.
type StatementHandler g m = GenericStatement -> PPT g m IndentedMessages

-- | Convert a single message to Text.
messageText :: (IsGameData (GameData g), Monad m) => ScriptMessage -> PPT g m Text
messageText msg = do
    mlangs <- getLangs
    return $ renderMessage Script mlangs msg

-- | Convert a single message to Doc.
message :: (IsGameData (GameData g), Monad m) => ScriptMessage -> PPT g m Doc
message msg = Doc.strictText <$> messageText msg

-- | Convert a list of messages zipped with their indentation levels to a Doc.
-- Each message is prepended with a number of asterisks (levels of bullet
-- list) equal to its indentation level.
imsg2doc :: (IsGameData (GameData g), Monad m) => IndentedMessages -> PPT g m Doc
imsg2doc msgs = PP.vsep <$>
                mapM (\(i,rm) -> do
                        m <- message rm
                        return (PP.hsep [Doc.strictText (T.replicate i "*"),  m]))
                     msgs

-- | As 'imsg2doc', but use HTML to format the messages instead of wiki markup.
-- This behaves better with <pre> blocks but doesn't play well with idea
-- groups.
imsg2doc_html :: forall g m. (IsGameData (GameData g), Monad m) => IndentedMessages -> PPT g m Doc
imsg2doc_html [] = return mempty
imsg2doc_html msgs@((i,_):_)
    | i > 0     = PP.enclose "<ul>" "</ul>" . fst <$> imsg2doc' msgs
    | otherwise = fst <$> imsg2doc' msgs
    where
        -- Format all (remaining) messages at the current indent level.
        imsg2doc' :: IndentedMessages -> PPT g m (Doc, IndentedMessages)
        imsg2doc' [] = return (mempty, [])
        imsg2doc' [(_, rm)] = do -- Last message.
            m <- message rm
            return (PP.enclose "<li>" "</li>" m, [])
        imsg2doc' ((i, rm):msgs@((i',_):_))
            | i < i' = do
                -- New indent.
                m <- message rm
                -- Format the indented stuff.
                (indented, moremsgs) <- imsg2doc' msgs
                -- Format stuff after the indent.
                (postdoc, restmsgs) <- imsg2doc' moremsgs
                -- Put it all together.
                return (PP.vsep
                            [PP.enclose "<li>" "</li>"
                                (PP.vsep
                                    [m
                                    ,PP.enclose "<ul>" "</ul>" indented])
                            ,postdoc]
                       , restmsgs)
            | i > i' = do
                -- Last message at this level.
                m <- PP.enclose "<li>" "</li>" <$> message rm
                return (m, msgs)
            | otherwise = do
                -- Carry on with this indent level.
                m <- PP.enclose "<li>" "</li>" <$> message rm
                (postdoc, restmsgs) <- imsg2doc' msgs
                return (m <> PP.line <> postdoc, restmsgs)

